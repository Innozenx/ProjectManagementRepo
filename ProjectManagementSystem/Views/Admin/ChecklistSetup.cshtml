@model IEnumerable<ProjectManagementSystem.Models.ChecklistSettingsViewModel>
@{
    ViewBag.Title = "Checklist Management";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    var userRole = User.IsInRole("PMS_ODCP_ADMIN") ? "PMS_ODCP_ADMIN" :
                   User.IsInRole("PMS_PROJECT_OWNER") ? "PMS_PROJECT_OWNER" :
                   (User.IsInRole("PMS_PROJECT_MANAGER") ? "PMS_PROJECT_MANAGER" : "Unknown");

    var checklists = ViewBag.Checklists as List<ProjectManagementSystem.Models.ChecklistSettingsViewModel>;
    var divisions = ViewBag.Divisions as List<dynamic>;
}


<div class="container mt-5">
    <div class="text-center">
        <h2 class="text-primary fw-bold">Checklist Management</h2> 
        <p class="text-muted">Easily create and manage checklists for project milestones.</p>
        <button id="createChecklistButton" class="btn btn-primary shadow-sm px-4 mt-3">
            <i class="fas fa-plus"></i> Create Checklist
        </button>
    </div>


@*<div class="row mt-5">
    <div class="text-center">
        <h2 class="text-primary fw-bold">Checklist Management</h2>
        <p class="text-muted">Easily create and manage your checklists for project milestones</p>
        <button id="createChecklistFormButton" class="btn btn-primary" shadow-sm px-4 mt-3>
            <i class="fas fa-plus"></i> Create
        </button>
    </div>*@

</div>
    <div id="checklistFormContainer" class="mt-4" style="display: none;">
        <div class="form-container shadow p-5 bg-white rounded-4">
            <h3 class="text-primary fw-bold">New Checklist</h3>
            <p class="text-muted">Select a division, choose milestones, and add tasks.</p>

            <form id="checklistForm" class="mt-4">  
                <div class="form-group mb-4">
                    <label for="checklistName" class="form-label fw-bold">Checklist Name</label>
                    <input type="text" id="checklistName" class="form-control" placeholder="Enter checklist name..." required>
                </div>

                <div class="form-group mb-4">
                    <label for="divisionDropdown" class="form-label fw-bold">Select Division</label>
                    <select id="divisionDropdown" class="form-select" required>
                        <option value="">Choose Division</option>
                        @if (ViewBag.Divisions != null)
                        {
                            foreach (var division in ViewBag.Divisions as List<SelectListItem>)
                            {
                                <option value="@division.Value">@division.Text</option>
                            }
                        }
                    </select>
                </div>

                <div class="form-group mb-4">
                    <label for="milestoneDropdown" class="form-label fw-bold">Select Milestone</label>
                    <select id="milestoneDropdown" class="form-select" disabled required>
                        <option value="">Choose Milestone</option>
                    </select>
                </div>


                <div class="form-group mb-4">
                    <label for="taskTextField" class="form-label fw-bold">Task Description</label>
                    <textarea id="taskTextField" class="form-control" rows="3" placeholder="Enter task details..."></textarea>
                </div>

                <div class="task-list-container mb-4">
                    <label class="form-label fw-bold">Tasks</label>
                    <div id="taskList" class="bg-light p-3 rounded">
                        <p class="text-muted text-center">No tasks added yet.</p>
                    </div>
                    <button type="button" id="addTaskButton" class="btn btn-outline-primary mt-2 w-100" disabled>Add Task</button>
                </div>
                <button type="submit" class="btn btn-primary w-100 mt-4">Save Checklist</button>
            </form>
        </div>
    </div>
</div>

<style>
    body {
        font-family: 'Poppins', sans-serif;
        background: #f8f9fa;
    }

    .form-container {
        max-width: 600px;
        margin: auto;
        border-radius: 12px;
    }

    .form-label {
        font-size: 16px;
        font-weight: 500;
    }

    .form-select, .form-control {
        font-size: 16px;
        padding: 12px;
        border-radius: 8px;
    }

    .btn-primary {
        background: #6f42c1;
        border: none;
    }

    .btn-outline-primary {
        border: 2px solid #6f42c1;
        color: #6f42c1;
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const createChecklistButton = document.getElementById("createChecklistButton");
        const checklistFormContainer = document.getElementById("checklistFormContainer");
        const divisionDropdown = document.getElementById("divisionDropdown");
        const milestoneDropdown = document.getElementById("milestoneDropdown");
        const addTaskButton = document.getElementById("addTaskButton");
        const taskTextField = document.getElementById("taskTextField");
        const taskList = document.getElementById("taskList");
        let tasks = [];

        createChecklistButton.addEventListener("click", function () {
            checklistFormContainer.style.display = "block";
            createChecklistButton.style.display = "none";
        });

        function fetchMilestones(division) {
            milestoneDropdown.innerHTML = '<option value="">Choose Milestone</option>';
            milestoneDropdown.disabled = true;
            addTaskButton.disabled = true;

            if (!division) return;

            fetch(`/Admin/GetMilestonesByDivision?division=${encodeURIComponent(division)}`)
                .then((res) => res.json())
                .then((data) => {
                    if (data.length > 0) {
                        milestoneDropdown.disabled = false;
                        data.forEach((milestone) => {
                            const option = document.createElement("option");
                            option.value = milestone.MilestoneId;
                            option.textContent = milestone.MilestoneName;
                            milestoneDropdown.appendChild(option);
                        });
                    }
                })
                .catch(error => console.error("Error fetching milestones:", error));
        }

        divisionDropdown.addEventListener("change", function () {
            fetchMilestones(divisionDropdown.value.trim());
        });

        milestoneDropdown.addEventListener("change", function () {
            addTaskButton.disabled = !this.value;
        });
    });
</script>
