@{
    ViewBag.Title = "Add Milestone • Project Management System";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container mt-4 d-flex justify-content-center">
    <div class="card shadow border-0 rounded-3 mx-auto" style="max-width: 900px; width: 100%;">
        <div class="card-body">
            <a href="@Url.Action("CreateChecklist", "Admin", new { divisionId = ViewBag.DivisionId })"
               class="btn btn-light btn-back mb-3">
                <i class="fas fa-arrow-left"></i>
            </a>

            <div class="row justify-content-center mb-4">
                <div class="col-md-8 text-center">
                    <h3 class="fw-bold text-purple">✔️ <br /> Add Milestone</h3>
                </div>
            </div>

            <div class="new-milestone-section">
                <div class="card shadow-sm bg-white rounded-3 mx-auto" style="max-width: 700px;">
                    <div class="card-body">
                        <form id="milestoneForm">
                            <input type="hidden" name="DivisionID" value="@ViewBag.DivisionId" />

                            <div class="mb-3">
                                <label class="form-label text-muted">Milestone Name</label>
                                <select name="MilestoneName" id="milestoneName" class="form-control rounded-2" required>
                                    <option value="">Select Milestone</option>
                                    @if (ViewBag.MilestoneList != null)
                                    {
                                        foreach (var milestone in ViewBag.MilestoneList as List<SelectListItem>)
                                        {
        
                                            <option value="@milestone.Text">@milestone.Text</option>
                                        }
                                    }
                                </select>
                            </div>
                            <button type="button" id="showRequirementsBtn" class="btn btn-outline-primary w-100 fw-bold">
                                <i class="fas fa-plus"></i> Add Requirements
                            </button>
                        </form>
                    </div>
                </div>
            </div>

            <div class="requirements-section mt-4" style="display: none;">
                <div class="card shadow-sm bg-white rounded-3 mx-auto" style="max-width: 700px;">
                    <div class="card-body">
                        <h4 id="requirementsTitle" class="mb-3 fw-bold text-dark text-center">Requirements</h4>
                        <div id="taskList"></div>

                        <button type="button" id="addTaskInsideBtn" class="btn btn-outline-success w-100 fw-bold">
                            <i class="fas fa-plus"></i> Add Task
                        </button>

                        <div class="mt-3 d-flex justify-content-between">
                            <button type="button" id="backToMilestone" class="btn btn-light fw-bold">
                                Back
                            </button>
                            <button type="submit" id="saveMilestone" class="btn btn-primary fw-bold" disabled>
                                Save
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    body {
        font-family: 'Poppins', sans-serif;
        background: #f4f6f9;
        color: #333;
    }

    .container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        animation: fadeIn 0.8s ease-in-out;
    }

    .card {
        background: #ffffff;
        box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.08);
        border-radius: 12px;
        padding: 30px;
        max-width: 700px;
        width: 100%;
    }

    h3 {
        color: #470A67;
        font-size: 22px;
        /*font-weight: bold;*/
    }

    .form-label {
        font-size: 14px;
        font-weight: 500;
    }

    .form-control {
        height: 45px;
        border-radius: 6px;
        border: 1px solid #ced4da;
    }

    .btn-primary {
        background: #470A67;
        border-color: #470A67;
        font-weight: 600;
        transition: all 0.3s ease-in-out;
    }

        .btn-primary:hover {
            background: #3b0555;
            border-color: #3b0555;
        }

    .btn-outline-primary {
        border-color: #28a745;
        color: #28a745;
        font-weight: 600;
    }

        .btn-outline-primary:hover {
            background: #28a745;
            color: white;
        }

    .btn-light {
        background: #f8f9fa;
        border: 1px solid #dee2e6;
        font-weight: 600;
        height: 42px;
    }

        .btn-light:hover {
            background: #e2e6ea;
        }

    .task-item {
        background: #ffffff;
        padding: 15px;
        border-radius: 6px;
        margin-bottom: 12px;
        box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.05);
        position: relative;
        border-left: 5px solid #470A67;
    }

    .remove-task {
        position: absolute;
        top: 10px;
        right: 12px;
        background: transparent;
        border: none;
        font-size: 18px;
        font-weight: bold;
        color: #ff0000;
        cursor: pointer;
        padding: 0; 
        width: 20px; 
        height: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .remove-task:hover {
            color: #b30000;
            transform: scale(1.1);
        }

    .approvers-container {
        background: #f8f9fa;
        padding: 5px;
        border-radius: 6px;
        border: 1px solid #ced4da;
    }

    .is-invalid {
        border: 1px solid red !important;
        background-color: #ffe6e6 !important;
    }

    .error-message {
        color: red;
        font-size: 12px;
        display: none;
    }

    .btn-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 15px;
    }
    #backToMilestone, #saveMilestone {
        width: 100px;
        height: 42px;
    }
    .select2-container--default .select2-selection--multiple {
        background: #fff;
        border: 1px solid #ced4da;
        border-radius: 6px;
        min-height: 42px;
    }

    .select2-container .select2-selection--multiple .select2-selection__choice {
        background: #470A67;
        color: white;
        border-radius: 4px;
        padding: 5px 10px;
        font-size: 14px;
    }

    .select2-container .select2-selection--multiple .select2-selection__choice__remove {
        color: white;
        margin-right: 5px;
    }

        .select2-container .select2-selection--multiple .select2-selection__choice__remove:hover {
            color: #ff0000;
        }
    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .btn-back {
        display: inline-flex;
        align-items: center;
        font-weight: 600;
        background: #f8f9fa;
        border: 1px solid #dee2e6;
        padding: 8px 16px;
        border-radius: 6px;
        text-decoration: none;
        color: #333;
        transition: all 0.3s ease-in-out;
    }

        .btn-back:hover {
            background: #e2e6ea;
            color: #333;
        }


</style>

<script>
    $(document).ready(function () {
        let taskIndex = 0;

        function initializeSelect2() {
            $(".select-approvers").select2({
                placeholder: "Select approvers",
                allowClear: true,
                width: "100%"
            });
        }

        initializeSelect2(); 

        function validateMilestoneSelection() {
            let milestoneName = $('#milestoneName').val(); // Get selected value (no need for .trim())

            if (!milestoneName) { // If no milestone is selected
                $('#milestoneName').addClass('is-invalid');
                $('#milestoneError').text("Please select a milestone before adding requirements.").show();
                return false;
            } else {
                $('#milestoneName').removeClass('is-invalid');
                $('#milestoneError').hide();
                return true;
            }
        }


        function validateForm() {
            let milestoneValid = validateMilestoneSelection();
            let milestoneName = $('#milestoneName').val().trim();
            let hasTasks = $('.task-item').length > 0;
            let hasTaskRequirements = $('.task-item input[name="TaskRequirement[]"]').filter(function () {
                return $(this).val().trim() !== "";
            }).length > 0;

            $('#saveMilestone').prop('disabled', !(milestoneValid && milestoneName && hasTasks && hasTaskRequirements));
        }

        $('#milestoneName').on('input', function () {
            validateForm();
        });

        $('#showRequirementsBtn').click(function () {
            if (!validateMilestoneSelection()) {
                return;
            }

            let milestoneName = $('#milestoneName option:selected').text();

            $(".new-milestone-section").hide();
            $(".requirements-section").show();

            $("#requirementsTitle").text(`Requirements for ${milestoneName}`);
        });


        $('#addTaskInsideBtn').click(function () {
            taskIndex++;
            let taskHtml = `
            <div class="task-item p-3 mb-2 border rounded position-relative" id="task-${taskIndex}">
                <button type="button" class="remove-task" data-task-id="task-${taskIndex}">&times;</button>
                <label class="fw-bold text-dark">Task</label>
                <input type="text" name="TaskRequirement[]" class="form-control mb-2 task-input" placeholder="Task description" required />

                <label class="fw-bold text-muted">Approvers</label>
                <select name="Approvers[${taskIndex}][]" class="form-select select-approvers" multiple="multiple" required>
                    @if (ViewBag.Users != null)
                    {
                        foreach (var user in ViewBag.Users as List<SelectListItem>)
                        {
                            <option value="@user.Value">@user.Text</option>
                        }
                    }
                </select>
            </div>`;

            $('#taskList').append(taskHtml);

            initializeSelect2(); 
            validateForm();
        });

        $(document).on('input', '.task-input', function () {
            validateForm();
        });

        $(document).on('click', '.remove-task', function () {
            let taskId = $(this).data('task-id');
            $('#' + taskId).remove();
            validateForm();
        });

        $('#backToMilestone').click(function () {
            $(".requirements-section").hide();
            $(".new-milestone-section").show();
            $("#milestoneName").focus();
        });

        $('#saveMilestone').prop('disabled', true);

        $('#saveMilestone').click(function (e) {
            e.preventDefault();
            let milestoneName = $('#milestoneName').val().trim();
            let tasks = [];

            $('.task-item').each(function () {
                let requirement = $(this).find('.task-input').val().trim();
                let approvers = $(this).find('.select-approvers').val() || [];
                if (requirement) {
                    tasks.push({ Requirement: requirement, Approvers: approvers });
                }
            });

            if (!milestoneName || tasks.length === 0) {
                Swal.fire("Error", "Milestone name and at least one task with a requirement are required.", "error");
                return;
            }

            for (let task of tasks) {
                if (task.Approvers.length === 0) {
                    Swal.fire("Error", "Each task must have at least one approver.", "error");
                    return;
                }
            }

            let formData = {
                DivisionID: '@ViewBag.DivisionId',
                MilestoneName: milestoneName,
                Tasks: tasks
            };

            $.ajax({
                url: '/Admin/SaveMilestone',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function (response) {
                    if (response.success) {
                        Swal.fire("Success", "Milestone saved successfully!", "success").then(() => {
                            window.location.href = "/Admin/CreateChecklist?divisionId=@ViewBag.DivisionId";
                        });
                    } else {
                        Swal.fire("Error", response.message, "error");
                    }
                },
                error: function () {
                    Swal.fire("Error", "Something went wrong while saving the milestone.", "error");
                }
            });
        });
    });
</script>


