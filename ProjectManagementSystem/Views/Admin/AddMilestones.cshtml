@{
    ViewBag.Title = "Add Milestone • Project Management System";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid mt-4">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="card shadow border-0 rounded-3">
                <div class="card-body">

                    <div class="row justify-content-center mb-4">
                        <div class="col-md-6 text-center">
                            <h3>
                                ✔️ <br /> Add Milestone
                            </h3>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <div class="card shadow-sm bg-white rounded-3">
                                <div class="card-body">
                                    <h4 class="mb-3 fw-bold text-dark">New Milestone</h4>

                                    <form id="milestoneForm">
                                        <input type="hidden" name="DivisionID" value="@ViewBag.DivisionId" />

                                        <div class="mb-3">
                                            <label class="form-label text-muted">Milestone Name</label>
                                            <input type="text" name="MilestoneName" id="milestoneName" class="form-control rounded-2" placeholder="Enter milestone name" required />
                                        </div>

                                        <button type="button" id="addTaskBtn" class="btn btn-outline-primary w-100">
                                            <i class="fas fa-plus"></i> Add Task
                                        </button>


                                    </form>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-8">
                            <div class="card shadow-sm bg-white rounded-3">
                                <div class="card-body">
                                    <h4 class="mb-3 fw-bold text-dark">Requirements</h4>
                                    <div id="taskList"></div>
                                    @*<div class="mt-3 d-flex justify-content-end gap-2">
                                        <a href="@Url.Action("CreateChecklist", "Admin", new { divisionId = ViewBag.DivisionId })" class="btn btn-light">Cancel</a>
                                        <button type="submit" class="btn btn-primary">Save</button>
                                    </div>*@
                                </div>
                            </div>
                        </div>
                    </div> 
                </div>
            </div> 
        </div> 
    </div> 
</div> 



<style>
@@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap');

body {
    font-family: 'Poppins', sans-serif;
    background: #f4f6f9;
    color: #333;
}

.container-fluid {
    max-width: 1400px;
}

.card {
    background: #ffffff;
    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.08);
    border-radius: 8px;
    padding: 20px;
}

.card-body {
    padding: 20px;
}


h4 {
    font-size: 20px;
    /*font-weight: 600;*/
}

    h3 {
        color: #470A67;
    }

.form-label {
    font-size: 14px;
    font-weight: 500;
}

.form-control {
    height: 42px;
    border-radius: 5px;
    border: 1px solid #ced4da;
}

.btn-primary {
    background: #470A67;
    border-color: #470A67;
    font-weight: 600;
    transition: all 0.3s ease-in-out;
}

.btn-primary:hover {
    background: #3b0555;
    border-color: #3b0555;
}

    .btn-outline-primary {
        border-color: #28a745;
        color: #28a745;
        font-weight: 600;
    }

        .btn-outline-primary:hover {
            background: #28a745;
            color: white;
        }

.btn-light {
    background: #f8f9fa;
    border: 1px solid #dee2e6;
    font-weight: 600;
}

.btn-light:hover {
    background: #e2e6ea;
}

.task-item {
    background: #ffffff;
    padding: 15px;
    border-radius: 6px;
    margin-bottom: 12px;
    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.05);
    position: relative;
}

.remove-task {
    position: absolute;
    top: 10px;
    right: 10px;
    background: transparent;
    border: none;
    color: #dc3545;
    font-size: 14px;
    font-weight: bold;
    cursor: pointer;
    transition: 0.3s;
}

.remove-task:hover {
    color: #a71d2a;
}

</style>
<script>
    $(document).ready(function () {
        let divisionId = '@ViewBag.DivisionId';
        let taskIndex = 0;

        function loadMilestones() {
            $.ajax({
                url: '/Admin/GetMilestones?divisionId=' + divisionId,
                type: 'GET',
                success: function (data) {
                    let tableBody = $("#milestoneTable tbody");
                    tableBody.empty();

                    if (!Array.isArray(data) || data.length === 0) {
                        tableBody.append(`<tr><td colspan="4" class="text-center text-muted">No milestones found.</td></tr>`);
                        return;
                    }

                    data.forEach(milestone => {
                        let requirementsText = "No requirements";
                        let approversCount = Array.isArray(milestone.Approvers) ? milestone.Approvers.length : 0;

                        if (typeof milestone.Requirements === "string" && milestone.Requirements.trim() !== "") {
                            requirementsText = milestone.Requirements.split(";").length + " Items";
                        }

                        tableBody.append(`
                            <tr>
                                <td>${milestone.MilestoneName || "Unnamed Milestone"}</td>
                                <td>${requirementsText}</td>
                                <td>${approversCount}</td>
                                <td>
                                    <button class="btn btn-primary btn-sm viewRow" data-id="${milestone.MilestoneID}">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button class="btn btn-danger btn-sm removeRow" data-id="${milestone.MilestoneID}">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        `);
                    });
                },
                error: function () {
                    console.error("Failed to load milestones.");
                }
            });
        }
        loadMilestones();

        $('#addTaskBtn').click(function () {
            taskIndex++;

            let taskHtml = `
                <div class="task-item p-3 mb-2 border rounded" id="task-${taskIndex}">
                    <label class="fw-bold text-dark">Task ${taskIndex}:</label>
                    <input type="text" name="TaskRequirement[]" class="form-control mb-2" placeholder="Task description" required />

                    <label class="fw-bold text-muted">Approvers:</label>
                    <select name="Approvers[${taskIndex}][]" class="form-select approversDropdown" multiple>
                        @if (ViewBag.Users != null)
                        {
                            foreach (var user in ViewBag.Users as List<SelectListItem>)
                            {
                                <option value="@user.Value">@user.Text</option>
                            }
                        }
                    </select>

                    <div class="mt-3 d-flex justify-content-end">
                        <button type="button" class="btn btn-success btn-sm save-task">Save</button>
                        <button type="button" class="btn btn-danger btn-sm close-task ms-2" data-task-id="task-${taskIndex}">Close</button>
                    </div>
                </div>
            `;

            $('#taskList').append(taskHtml);
            $('.approversDropdown').select2({ placeholder: "Select approvers", allowClear: true });
        });

        $(document).on('click', '.close-task', function () {
            let taskId = $(this).data('task-id');
            $('#' + taskId).remove();
        });

        $(document).on('click', '.save-task', function () {
            Swal.fire({
                icon: 'success',
                title: 'Task Saved!',
                text: 'The task has been added successfully.',
                confirmButtonColor: '#470A67'
            });
        });

        $("#searchMilestone").on("keyup", function () {
            let value = $(this).val().toLowerCase();
            $("#milestoneTable tbody tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
            });
        });

        $('#saveMilestones').click(function () {
            let milestones = [];
            $('#milestoneTable tbody tr').each(function () {
                let milestone = {
                    DivisionId: '@ViewBag.DivisionId',
                    Name: $(this).find('.milestone-name').val(),
                    Requirements: $(this).find('.milestone-requirements').val(),
                    Approvals: $(this).find('.milestone-approvers').val()
                };
                milestones.push(milestone);
            });

            $.ajax({
                url: '/Admin/SaveMilestones',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(milestones),
                success: function (response) {
                    if (response.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Checklist Created!',
                            text: 'Your checklist has been successfully saved.',
                            confirmButtonColor: '#470A67'
                        }).then(() => {
                            window.location.href = "/Admin/Milestones";
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: response.message,
                            confirmButtonColor: '#470A67'
                        });
                    }
                }
            });
        });
    });
</script>



