@{
    ViewBag.Title = "Add Milestone • Project Management System";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid mt-4">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="card shadow border-0 rounded-3">
                <div class="card-body">
                    <div class="row justify-content-center mb-4">
                        <div class="col-md-6 text-center">
                            <h3>✔️ <br /> Add Milestone</h3>
                        </div>
                    </div>

                    <div class="row">
                        <!-- New Milestone Section -->
                        <div class="col-md-4">
                            <div class="card shadow-sm bg-white rounded-3">
                                <div class="card-body">
                                    <h4 class="mb-3 fw-bold text-dark">New Milestone</h4>

                                    <form id="milestoneForm">
                                        <input type="hidden" name="DivisionID" value="@ViewBag.DivisionId" />

                                        <div class="mb-3">
                                            <label class="form-label text-muted"></label>
                                            <input type="text" name="MilestoneName" id="milestoneName"
                                                   class="form-control rounded-2" placeholder="Enter milestone name" required />
                                        </div>

                                        <button type="button" id="addTaskBtn" class="btn btn-outline-primary w-100">
                                            <i class="fas fa-plus"></i> Add Task
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>

                        <!-- Requirements Section -->
                        <div class="col-md-8">
                            <div class="card shadow-sm bg-white rounded-3">
                                <div class="card-body">
                                    <h4 class="mb-3 fw-bold text-dark">Requirements</h4>
                                    <div id="taskList"></div>

                                    <!-- Buttons Section -->
                                    <div class="mt-3 btn-container">
                                        <a href="@Url.Action("CreateChecklist", "Admin", new { divisionId = ViewBag.DivisionId })" class="btn btn-light">
                                            Cancel
                                        </a>
                                        <button type="submit" id="saveMilestone" class="btn btn-primary" disabled>Save</button>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    body {
        font-family: 'Poppins', sans-serif;
        background: #f4f6f9;
        color: #333;
    }

    .container-fluid {
        max-width: 1200px;
    }

    .card {
        background: #ffffff;
        box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.08);
        border-radius: 8px;
        padding: 20px;
    }

    .card-body {
        padding: 20px;
    }

    h3 {
        color: #470A67;
     
    }

    .form-label {
        font-size: 14px;
        font-weight: 500;
    }

    .form-control {
        height: 42px;
        border-radius: 6px;
        border: 1px solid #ced4da;
    }

    .btn-primary {
        background: #470A67;
        border-color: #470A67;
        font-weight: 600;
        transition: all 0.3s ease-in-out;
    }

        .btn-primary:hover {
            background: #3b0555;
            border-color: #3b0555;
        }

    .btn-outline-primary {
        border-color: #28a745;
        color: #28a745;
        font-weight: 600;
    }

        .btn-outline-primary:hover {
            background: #28a745;
            color: white;
        }

    .btn-light {
        background: #f8f9fa;
        border: 1px solid #dee2e6;
        font-weight: 600;
        height: 42px;
    }

        .btn-light:hover {
            background: #e2e6ea;
        }

    .btn-danger {
        height: 40px;
        font-weight: 600;
    }

    .task-item {
        background: #ffffff;
        padding: 15px;
        border-radius: 6px;
        margin-bottom: 12px;
        box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.05);
        position: relative;
    }

    .remove-task {
        background: #dc3545;
        color: white;
        font-size: 14px;
        font-weight: bold;
        border-radius: 6px;
        height: 40px;
    }

        .remove-task:hover {
            background: #a71d2a;
        }

    .btn-container {
        display: flex;
        justify-content: flex-end;
        align-items: center;
        gap: 10px;
    }
</style>

<script>
    $(document).ready(function () {
        let taskIndex = 0;

        function validateForm() {
            let milestoneName = $('#milestoneName').val().trim();
            let hasTasks = $('.task-item').length > 0;
            let hasTaskRequirements = $('.task-item input[name="TaskRequirement[]"]').filter(function () {
                return $(this).val().trim() !== "";
            }).length > 0;

            $('#saveMilestone').prop('disabled', !(milestoneName && hasTasks && hasTaskRequirements));
        }

        $('#milestoneName').on('input', function () {
            validateForm();
        });

        $('#addTaskBtn').click(function () {
            taskIndex++;
            let taskHtml = `
                <div class="task-item p-3 mb-2 border rounded" id="task-${taskIndex}">
                    <label class="fw-bold text-dark">Task ${taskIndex}:</label>
                    <input type="text" name="TaskRequirement[]" class="form-control mb-2" placeholder="Task description" required />

                    <label class="fw-bold text-muted">Approvers:</label>
                    <select name="Approvers[${taskIndex}][]" class="form-select approversDropdown" multiple required>
                        @if (ViewBag.Users != null)
                        {
                            foreach (var user in ViewBag.Users as List<SelectListItem>)
                            {
                                <option value="@user.Value">@user.Text</option>
                            }
                        }
                    </select>

                    <div class="mt-3 d-flex justify-content-end">
                        <button type="button" class="btn btn-danger btn-sm close-task ms-2" data-task-id="task-${taskIndex}">Remove</button>
                    </div>
                </div>
            `;
            $('#taskList').append(taskHtml);
            validateForm();
        });

        $(document).on('input', 'input[name="TaskRequirement[]"]', function () {
            validateForm();
        });

        $(document).on('click', '.close-task', function () {
            let taskId = $(this).data('task-id');
            $('#' + taskId).remove();
            validateForm();
        });

        $('#saveMilestone').prop('disabled', true);

        $('#saveMilestone').click(function (e) {
            e.preventDefault();
            let milestoneName = $('#milestoneName').val().trim();
            let tasks = [];

            $('.task-item').each(function () {
                let requirement = $(this).find('input[name="TaskRequirement[]"]').val().trim();
                let approvers = $(this).find('select[name^="Approvers"]').val() || [];
                if (requirement) {
                    tasks.push({ Requirement: requirement, Approvers: approvers });
                }
            });

            if (!milestoneName || tasks.length === 0) {
                Swal.fire("Error", "Milestone name and at least one task with a requirement are required.", "error");
                return;
            }

            for (let task of tasks) {
                if (task.Approvers.length === 0) {
                    Swal.fire("Error", "Each task must have at least one approver.", "error");
                    return;
                }
            }

            let formData = {
                DivisionID: '@ViewBag.DivisionId',
                MilestoneName: milestoneName,
                Tasks: tasks
            };

            $.ajax({
                url: '/Admin/SaveMilestone',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function (response) {
                    if (response.success) {
                        Swal.fire("Success", "Milestone saved successfully!", "success").then(() => {
                            window.location.href = "/Admin/CreateChecklist?divisionId=@ViewBag.DivisionId";
                        });
                    } else {
                        Swal.fire("Error", response.message, "error");
                    }
                },
                error: function () {
                    Swal.fire("Error", "Something went wrong while saving the milestone.", "error");
                }
            });
        });
    });
</script>

