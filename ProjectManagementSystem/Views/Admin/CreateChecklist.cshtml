@model List<ProjectManagementSystem.Models.MilestoneViewModel>

@{
    ViewBag.Title = "Create Checklist • Project Management System";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid mt-4">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="card shadow border-0 rounded-3">
                <div class="card-body">

                    <div class="row justify-content-center mb-4">
                        <div class="col-md-6 text-center">
                            <h3 class="fw-bold text-dark">
                                📝 <br /> Create Checklist
                            </h3>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <div class="card shadow-sm bg-white rounded-3">
                                <div class="card-body">
                                    <h4 class="mb-3 fw-bold text-dark">Division</h4>

                                    @if (!string.IsNullOrEmpty(ViewBag.DivisionName))
                                    {
                                        <p class="fw-bold text-muted">@ViewBag.DivisionName</p>
                                    }
                                    else
                                    {
                                        <div class="alert alert-danger text-center fw-bold">
                                            No division selected! Please go back and select a division.
                                        </div>
                                    }

                                    <a href="@Url.Action("AddMilestones", "Admin", new { divisionId = ViewBag.DivisionId })"
                                       class="btn btn-outline-primary w-100 mt-3">
                                        <i class="fas fa-plus"></i> Add Milestone
                                    </a>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-8">
                            <div class="card shadow-sm bg-white rounded-3">
                                <div class="card-body">
                                    <h4 class="mb-3 fw-bold text-dark">Milestones</h4>


                                    <input type="text" id="searchMilestone" class="form-control mb-3" placeholder="Search milestones...">

                                    <div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
                                        <table class="table table-hover table-bordered" id="milestoneTable">
                                            <thead class="table-light sticky-header">
                                                <tr>
                                                    <th>Milestone Name</th>
                                                    <th>Requirements</th>
                                                    <th>Approvers</th>
                                                    <th>Actions</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (Model != null && Model.Any())
                                                {
                                                    foreach (var milestone in Model)
                                                    {
                                                        <tr>
                                                            <td>@milestone.MilestoneName</td>
                                                            <td>@milestone.Requirements.Count Items</td>
                                                            <td>@milestone.Approvers.Count</td>
                                                            <td>
                                                                <button class="btn btn-primary btn-sm viewRow" data-id="@milestone.Id">
                                                                    <i class="fas fa-eye"></i>
                                                                </button>
                                                                <button class="btn btn-danger btn-sm removeRow" data-id="@milestone.Id">
                                                                    <i class="fas fa-trash"></i>
                                                                </button>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                                else
                                                {
                                                    <tr>
                                                        <td colspan="4" class="text-center text-muted">No milestones found.</td>
                                                    </tr>
                                                }
                                            </tbody>

                                        </table>
                                    </div>

                                    @*<div class="mt-3 d-flex justify-content-end">
                                        <button id="saveMilestones" class="btn btn-primary">Save Checklist</button>
                                    </div>*@

                                </div>
                            </div>
                        </div>
                    </div>
                </div> 
            </div>
        </div>
    </div>
</div> 

<style>

body {
    font-family: 'Poppins', sans-serif;
    background: #f4f6f9;
    color: #333;
}

.container-fluid {
    max-width: 1400px;
}

.card {
    background: #ffffff;
    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.08);
    border-radius: 8px;
    padding: 20px;
}

.card-body {
    padding: 20px;
}

#searchMilestone {
    border-radius: 6px;
    padding: 10px;
    border: 1px solid #ced4da;
}

.table {
    font-size: 14px;
}

.table thead {
    background: #f8f9fa;
    font-weight: 600;
}

.sticky-header {
    position: sticky;
    top: 0;
    background: #f8f9fa;
    z-index: 2;
}

.table-hover tbody tr:hover {
    background: #f1f3f5;
}


.btn-primary {
    background: #470A67;
    border-color: #470A67;
    font-weight: 600;
    transition: all 0.3s ease-in-out;
}

.btn-primary:hover {
    background: #3b0555;
    border-color: #3b0555;
}

.btn-outline-primary {
    border-color: #470A67;
    color: #470A67;
    font-weight: 600;
}

.btn-outline-primary:hover {
    background: #470A67;
    color: white;
}

.btn-light {
    background: #f8f9fa;
    border: 1px solid #dee2e6;
    font-weight: 600;
}

.btn-light:hover {
    background: #e2e6ea;
}

    .btn-outline-primary {
        border-color: #28a745;
        color: #28a745;
        font-weight: 600;
    }

        .btn-outline-primary:hover {
            background: #28a745;
            color: white;
        }
</style>

<script>
    $(document).ready(function () {
    let divisionId = '@ViewBag.DivisionId';

    function loadMilestones() {
        $.ajax({
            url: '/Admin/GetMilestones?divisionId=' + divisionId,
            type: 'GET',
            success: function (data) {
                let tableBody = $("#milestoneTable tbody");
                tableBody.empty();

                if (data.length === 0) {
                    tableBody.append(`<tr><td colspan="4" class="text-center text-muted">No milestones found.</td></tr>`);
                } else {
                    data.forEach(milestone => {
                        let requirementsList = milestone.Requirements.length > 0
                            ? `<ul class="list-unstyled">${milestone.Requirements.map(req => `<li>• ${req}</li>`).join('')}</ul>`
                            : "No requirements";

                        let approversList = milestone.Approvers.length > 0
                            ? `<ul class="list-unstyled">${milestone.Approvers.map(appr => `<li>• ${appr}</li>`).join('')}</ul>`
                            : "No approvers assigned";

                        tableBody.append(`
                        <tr>
                            <td>${milestone.MilestoneName}</td>
                            <td>${requirementsList}</td>
                            <td>${approversList}</td>
                            <td>
                                <button class="btn btn-outline-primary btn-sm viewRow" data-id="${milestone.MilestoneID}" data-bs-toggle="tooltip" title="View Milestone">
                                    <i class="fas fa-eye"></i>
                                </button>
                                <button class="btn btn-outline-warning btn-sm editRow" data-id="${milestone.MilestoneID}" data-bs-toggle="tooltip" title="Edit Milestone">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn btn-outline-danger btn-sm removeRow" data-id="${milestone.MilestoneID}" data-bs-toggle="tooltip" title="Delete Milestone">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </td>
                        </tr>
                    `);
                    });
                }
                $('[data-bs-toggle="tooltip"]').tooltip();
            },
            error: function (xhr, status, error) {
                console.error("Failed to load milestones: ", error);
            }
        });
    }
    loadMilestones();

    $("#searchMilestone").on("keyup", function () {
        let value = $(this).val().toLowerCase();
        $("#milestoneTable tbody tr").filter(function () {
            $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
        });
    });

    $('#addMilestoneRow').click(function () {
        $('#milestoneTable tbody').append(`
            <tr>
                <td><input type="text" class="form-control milestone-name" placeholder="Enter milestone name" required></td>
                <td><textarea class="form-control milestone-requirements" placeholder="Enter requirements"></textarea></td>
                <td><input type="number" class="form-control milestone-approvers" placeholder="No. of Approvers" required></td>
                <td>
                    <button class="btn btn-outline-primary btn-sm viewRow" data-bs-toggle="tooltip" title="View Milestone">
                        <i class="fas fa-eye"></i>
                    </button>
                    <button class="btn btn-outline-warning btn-sm editRow" data-bs-toggle="tooltip" title="Edit Milestone">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button class="btn btn-outline-danger btn-sm removeRow" data-bs-toggle="tooltip" title="Delete Milestone">
                        <i class="fas fa-trash"></i>
                    </button>
                </td>
            </tr>
        `);

        $('[data-bs-toggle="tooltip"]').tooltip();
    });

    $(document).on('click', '.removeRow', function () {
        $(this).closest('tr').remove();
    });

    $('#saveMilestones').click(function () {
        let milestones = [];
        $('#milestoneTable tbody tr').each(function () {
            let milestone = {
                DivisionId: '@ViewBag.DivisionId',
                Name: $(this).find('.milestone-name').val(),
                Requirements: $(this).find('.milestone-requirements').val(),
                Approvals: $(this).find('.milestone-approvers').val()
            };
            milestones.push(milestone);
        });

        $.ajax({
            url: '/Admin/SaveMilestones',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(milestones),
            success: function (response) {
                if (response.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Checklist Created!',
                        text: 'Your checklist has been successfully saved.',
                        confirmButtonColor: '#470A67'
                    }).then(() => {
                        window.location.href = "/Admin/Milestones";
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: response.message,
                        confirmButtonColor: '#470A67'
                    });
                }
            },
            error: function (xhr, status, error) {
                console.error("Failed to save milestones: ", error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: 'An unexpected error occurred while saving the milestone.',
                    confirmButtonColor: '#470A67'
                });
            }
        });
    });

    $(document).tooltip({
        selector: '[data-bs-toggle="tooltip"]'
    });
});

</script>
