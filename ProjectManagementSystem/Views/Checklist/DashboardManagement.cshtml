@model ProjectManagementSystem.Models.DashboardManagementViewModel
@using System.Globalization;

@{
    ViewBag.Title = "Dashboard • Project Management System";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    var userEmail = User.Identity.Name ?? "Guest";
    var userName = userEmail.Contains("@") ? userEmail.Split('@')[0] : userEmail;

    var calendar = CultureInfo.InvariantCulture.Calendar;
    var currentWeek = calendar.GetWeekOfYear(DateTime.Now, CalendarWeekRule.FirstDay, DayOfWeek.Sunday);
}

<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>


<style>
    body {
        font-family: 'Poppins', sans-serif;
        background-color: #f4f6f9;
        margin: 0;
        padding: 0;
    }

    .header-container {
        background-color: #470A67;
        color: white;
        text-align: center;
        padding: 50px 40px;
        margin: 20px auto;
        width: 95%;
        max-width: 1200px;
        border-radius: 15px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        animation: fadeIn 1s ease-in-out;
    }

        .header-container h1 {
            font-size: 2.2rem;
            margin-bottom: 10px;
        }

    .top-card-row {
        display: flex;
        justify-content: center;
        gap: 25px;
        margin: 30px auto;
        width: 95%;
        max-width: 1200px;
        animation: fadeIn 1.2s ease-in-out;
    }

    .top-card {
        background-color: #e7dff3;
        color: #66339A;
        border-radius: 30px;
        width: 220px;
        padding: 18px 25px;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        text-align: center;
        animation: scaleUp 1.2s ease-in-out;
    }

        .top-card h3 {
            font-size: 1.5rem;
            /*/*font-weight: bold;*/
            margin: 0;
        }

    .content-section {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 25px;
        margin-top: 35px;
        width: 95%;
        max-width: 1200px;
        animation: fadeIn 1.5s ease-in-out;
    }

    .table-container.wide-table-container {
        margin-top: 30px;
        overflow-x: auto;
        border-radius: 10px;
        background-color: #fff;
        padding: 30px;
        width: 95%;
        max-width: 1200px;
        min-height: 250px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        animation: fadeIn 1.8s ease-in-out;
        margin-bottom: 100px;
    }

    .table th {
        background: #66399A;
        color: white;
        padding: 16px;
        font-size: 1rem;
        font-weight: normal;
        text-align: center;
        border-bottom: 2px solid white;
    }

        .table th:first-child {
            border-top-left-radius: 8px;
        }

        .table th:last-child {
            border-top-right-radius: 8px;
        }

    .table td {
        text-align: center;
        font-size: 0.9rem;
        padding: 15px 20px;
    }

    .table tbody tr:hover {
        background: #f5f5f5;
    }

    @@media (max-width: 1024px) {
        .header-container, .content-section, .table-container {
            width: 95%;
        }

        .top-card {
            width: 180px;
            padding: 12px;
        }
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes scaleUp {
        from {
            opacity: 0;
            transform: scale(0.9);
        }

        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    .dataTables_wrapper {
        padding-bottom: 20px;
    }

    footer {
        margin-top: 10px;
        padding: 10px 0;
    }

    .status-badge {
        font-weight: 600;
        font-size: 13px;
        padding: 6px 12px;
        border-radius: 20px;
        display: inline-block;
        min-width: 100px;
        text-align: center;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        transition: all 0.2s ease-in-out;
    }


    .tooltip-container {
        position: relative;
        display: inline-block;
    }

    .tooltip-container {
        position: relative;
        display: inline-block;
    }

    .custom-tooltip {
        visibility: hidden;
        opacity: 0;
        background-color: rgba(0, 0, 0, 0.85);
        color: white;
        text-align: left;
        border-radius: 6px;
        padding: 8px 10px;
        position: absolute;
        z-index: 999;
        bottom: 125%;
        left: 50%;
        transform: translateX(-50%);
        width: max-content;
        max-width: 200px;
        font-size: 12px;
        transition: opacity 0.3s;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
    }

    .tooltip-container:hover .custom-tooltip {
        visibility: visible;
        opacity: 1;
    }

    .table-container {
        margin-top: 30px;
        overflow-x: auto;
        border-radius: 10px;
        background-color: #fff;
        padding: 30px;
        width: 95%;
        max-width: 1200px;
        min-height: 250px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        animation: fadeIn 1.8s ease-in-out;
        margin-left: auto;
        margin-right: auto;
    }
</style>

@*<div class="header-container">
        @if (User.IsInRole("PMS_DIVISION_HEAD"))
        {
            <h1>💻</h1>
            <p>@DateTime.Now.ToString("ddd, MMMM dd, yyyy")</p>
            <h1>[DIV NAME] Division's Project Overview</h1>
            <p>Track and manage your team's projects.</p>
        }
        else if (User.IsInRole("PMS_Management") || (User.IsInRole("PMS_ODCP_ADMIN")))
        {
            <h1>📊</h1>
            <p>@DateTime.Now.ToString("ddd, MMMM dd, yyyy")</p>
            <h1>Dashboard Management Overview</h1>
            <p>View all projects across divisions.</p>
        }
    </div>*@

@{
    string bgColor = "#e7dff3";
    string completedIcon = "<i class='fas fa-check-circle'></i>";
    string pendingIcon = "<i class='fas fa-exclamation-circle'></i>";
    string totalIcon = "<i class='fas fa-tasks'></i>";
    string weekIcon = "<i class='fas fa-calendar-week'></i>";

    if (Model.userRole == 4035)
    {
        bgColor = "#f3e5f5";
        completedIcon = "<i class='fas fa-briefcase'></i>";
    }
    else if (Model.userRole == 4036)
    {
        bgColor = "#e0f7fa";
        pendingIcon = "<i class='fas fa-info-circle'></i>";
    }
    else if (Model.userRole == 4037)
    {
        bgColor = "#fff3cd";
        completedIcon = "<i class='fas fa-user-check'></i>";
        totalIcon = "<i class='fas fa-layer-group'></i>";
    }
}
@*<div class="top-card-row">
        <div class="top-card" style="background-color:@bgColor;">
            @Html.Raw(completedIcon)
            <p>Completed Projects</p>
            <h3>@Model.CompletedTasks</h3>
        </div>
        <div class="top-card" style="background-color:@bgColor;">
            @Html.Raw(pendingIcon)
            <p>Pending Projects</p>
            <h3>@Model.PendingTasks</h3>
        </div>
        <div class="top-card" style="background-color:@bgColor;">
            @Html.Raw(totalIcon)
            <p>Total Projects</p>
            <h3>@Model.TotalTasks</h3>
        </div>
        <div class="top-card" style="background-color:@bgColor;">
            @Html.Raw(weekIcon)
            <p>Current Week</p>
            <h3>Week @Model.CurrentWeek</h3>
        </div>
    </div>*@

<div class="loader-body">
    <div class="loader-container">
        <span class="loader-span"></span>
        <div class="loader-center">
            <div class="loader-wrap">
                <div class="box-1 box">

                    <i><img src="~/FrontEnd/dist/img/smiley_eldar.png" class="eldar-img" /></i>
                    <i><img src="~/FrontEnd/dist/img/happy_eldar.png" class="eldar-img" /></i>
                </div>
                <div class="box-2 box">
                    <i><img src="~/FrontEnd/dist/img/smiley_eldar.png" class="eldar-img" /></i>
                    <i><img src="~/FrontEnd/dist/img/happy_eldar.png" class="eldar-img" /></i>
                </div>
            </div>
        </div>
    </div>
</div>

<a href="https://dribbble.com/YancyMin" class="dr-url" target="_blank"><img class="dr" src="https://cdn.dribbble.com/assets/logo-footer-hd-a05db77841b4b27c0bf23ec1378e97c988190dfe7d26e32e1faea7269f9e001b.png" alt=""></a>

<div class="main-body d-none">
    @if (Model.ShowBothDashboards)
    {
        <ul class="nav nav-tabs justify-content-center mt-5" id="dualViewTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <a class="nav-link active" id="management-tab" data-toggle="tab" href="#managementView" role="tab" aria-controls="managementView" aria-selected="true">
                    @*📊*@ Management Dashboard
                </a>
            </li>
            <li class="nav-item" role="presentation">
                <a class="nav-link" id="division-tab" data-toggle="tab" href="#divisionView" role="tab" aria-controls="divisionView" aria-selected="false">
                    @*💻*@ @Model.userDivision Dashboard
                </a>
            </li>
        </ul>

        <div class="tab-content mt-4" id="dualViewTabsContent">

            <!-- management view -->
            <div class="tab-pane fade show active" id="managementView" role="tabpanel" aria-labelledby="management-tab">
                <div class="header-container">
                    <h1>📊</h1>
                    <p>@DateTime.Now.ToString("ddd, MMMM dd, yyyy")</p>
                    <h1>Dashboard Management Overview</h1>
                    <p>View all projects across divisions.</p>
                </div>

                <div class="top-card-row">
                    <div class="top-card">
                        <i class="fas fa-check-circle"></i>
                        <p>Completed Projects</p>
                        <h3>@Model.CompletedTasks</h3>
                    </div>
                    <div class="top-card">
                        <i class="fas fa-exclamation-circle"></i>
                        <p>Pending Projects</p>
                        <h3>@Model.PendingTasks</h3>
                    </div>
                    <div class="top-card">
                        <i class="fas fa-tasks"></i>
                        <p>Total Projects</p>
                        <h3>@Model.TotalTasks</h3>
                    </div>
                    <div class="top-card">
                        <i class="fas fa-calendar-week"></i>
                        <p>Current Week</p>
                        <h3>Week @Model.CurrentWeek</h3>
                    </div>
                </div>

                @Html.Partial("_ManagementDashboard", Model)
            </div>

            <!-- div head View -->
            <div class="tab-pane fade" id="divisionView" role="tabpanel" aria-labelledby="division-tab">
                <div class="header-container">
                    <h1>💻</h1>
                    <p>@DateTime.Now.ToString("ddd, MMMM dd, yyyy")</p>
                    <h1>@Model.userDivision <br />Project Overview</h1>
                    <p>Track and manage your division's projects.</p>
                </div>

                <div class="top-card-row">
                    <div class="top-card" style="background-color:#f3e5f5;">
                        <i class="fas fa-briefcase"></i>
                        <p>Completed Projects</p>
                        <h3>@Model.CompletedTasks</h3>
                    </div>
                    <div class="top-card" style="background-color:#f3e5f5;">
                        <i class="fas fa-exclamation-circle"></i>
                        <p>Pending Projects</p>
                        <h3>@Model.PendingTasks</h3>
                    </div>
                    <div class="top-card" style="background-color:#f3e5f5;">
                        <i class="fas fa-tasks"></i>
                        <p>Total Projects</p>
                        <h3>@Model.TotalTasks</h3>
                    </div>
                    <div class="top-card" style="background-color:#f3e5f5;">
                        <i class="fas fa-calendar-week"></i>
                        <p>Current Week</p>
                        <h3>Week @Model.CurrentWeek</h3>
                    </div>
                </div>

                @Html.Partial("_DivisionDashboard", Model)
            </div>

        </div>
    }
    else if (Model.userRole == 4035)
    {
        <div class="header-container">
            <h1>💻</h1>
            <p>@DateTime.Now.ToString("ddd, MMMM dd, yyyy")</p>
            <h1>@Model.userDivision Division's Project Overview</h1>
            <p>Track and manage your division's projects.</p>
        </div>
        <div class="top-card-row">
        </div>
        @Html.Partial("_DivisionDashboard", Model)
    }
    else if (User.IsInRole("PMS_Management") || User.IsInRole("PMS_ODCP_ADMIN"))
    {
        <div class="header-container">
            <h1>📊</h1>
            <p>@DateTime.Now.ToString("ddd, MMMM dd, yyyy")</p>
            <h1>Dashboard Management Overview</h1>
            <p>View all projects across divisions.</p>
        </div>
        <div class="top-card-row">
        </div>
        @Html.Partial("_ManagementDashboard", Model)
    }
</div>

<!--search bar-->
@*<div class="container">
        @if (User.IsInRole("PMS_Management") || (User.IsInRole("PMS_ODCP_ADMIN")))
        {
            <div class="mb-3">
                <input type="text" id="divisionSearch" class="form-control" placeholder="Search Divisions...">
            </div>
        }
        <ul class="nav nav-tabs" id="divisionTabs" role="tablist">
            @if (Model.userRole == 4035)
            {
                var divisionId = Model.userDivision.Split(' ').Select(x => x[0]);
                var divisionInitials = string.Join("", divisionId);
                <li class="nav-item division-tab" data-division="@divisionInitials">
                    <a class="nav-link @divisionInitials active" id="tab-@divisionInitials" data-toggle="tab" href="#panel-@divisionInitials" role="tab" aria-controls="panel-@divisionInitials" aria-selected="true">
                        @divisionInitials Division
                    </a>
                </li>
            }
            else if (Model.userRole == 4036)
            {
                foreach (var division in Model.Divisions)
                {
                    var divisionId = division.Replace(" ", "");
                    <li class="nav-item division-tab" data-division="@division">
                        <a class="nav-link @((Model.Divisions.First() == division) ? "active" : "")" id="tab-@divisionId" data-toggle="tab" href="#panel-@divisionId" role="tab" aria-controls="panel-@divisionId" aria-selected="true">
                            @division Division
                        </a>
                    </li>
                }
            }
        </ul>

        <div class="tab-content" id="divisionTabContent">
            @if (Model.userRole == 4035)
            {
                <div class="tab-pane fade show active" id="panel-@Model.userDivision" role="tabpanel" aria-labelledby="tab-@Model.userDivision">
                    <div class="table-container wide-table-container">
                        <h5>@Model.userDivision Division's Projects</h5>
                        <div class="status-legend d-flex flex-wrap gap-2 justify-content-end mt-1">
                            <label style="font-size: 12px; font-weight: 500; color: #555; margin-top: 8px;">Legend:</label>
                            <span class="legend-badge" style="background:#D4EDDA; color:#155724;">Completed</span>
                            <span class="legend-badge" style="background:#D6E4FF; color:#004085;">Active</span>
                            <span class="legend-badge" style="background:#FFF9DB; color:#856404;">Due Today</span>
                            <span class="legend-badge" style="background:#F8D7DA; color:#b30000;">Delayed</span>
                            <span class="legend-badge" style="background:#E2E3E5; color:#383d41;">Pending</span>
                        </div>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Projects</th>
                                    @foreach (var milestoneName in Model.UniqueMilestoneNames)
                                    {
                                        <th>@milestoneName</th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.IndividualProjects != null && Model.IndividualProjects.Any())
                                {
                                    foreach (var project in Model.IndividualProjects)
                                    {
                                        <tr>
                                            <td class="project-title-cell" style="position: relative; word-break: break-word; overflow-wrap: break-word;">
                                                <a href="@Url.Action("weeklyMilestone", "Checklist", new { id = project.MainId })" class="text-decoration-none text-primary">
                                                    @project.ProjectTitle
                                                </a>
                                            </td>
                                            @foreach (var milestoneName in Model.UniqueMilestoneNames)
                                            {
                                                var milestoneTasks = Model.ProjectsMilestones.Where(pm => pm.ProjectTitle == project.ProjectTitle && pm.MilestoneName == milestoneName).ToList();

                                                var latestEndDate = milestoneTasks.Any(pm => pm.EndDate.HasValue) ? milestoneTasks.Max(pm => pm.EndDate.Value) : (DateTime?)null;
                                                var currentEndDate = milestoneTasks.Any(pm => pm.CurrentCompletionDate.HasValue) ? milestoneTasks.Max(pm => pm.CurrentCompletionDate.Value) : latestEndDate;

                                                var osWeek = latestEndDate.HasValue ? $"WW{latestEndDate.Value:yy}{CultureInfo.InvariantCulture.Calendar.GetWeekOfYear(latestEndDate.Value, CalendarWeekRule.FirstFourDayWeek, DayOfWeek.Sunday):00}" : "-";
                                                var csWeek = currentEndDate.HasValue ? $"WW{currentEndDate.Value:yy}{CultureInfo.InvariantCulture.Calendar.GetWeekOfYear(currentEndDate.Value, CalendarWeekRule.FirstFourDayWeek, DayOfWeek.Sunday):00}" : "-";

                                                string combinedFormatted = "-";
                                                if (osWeek != "-" && csWeek != "-" && osWeek != csWeek)
                                                {
                                                    combinedFormatted = $"{osWeek} os / {csWeek} cs";
                                                }
                                                else if (osWeek != "-")
                                                {
                                                    combinedFormatted = osWeek;
                                                }

                                                var milestoneStatus = milestoneTasks.FirstOrDefault()?.MilestoneStatus ?? "";
                                                string cellColor = "", textColor = "";
                                                switch (milestoneStatus)
                                                {
                                                    case "Completed": cellColor = "#E6F4EA"; textColor = "#4C8C6B"; break;
                                                    case "Active": cellColor = "#E8F0FE"; textColor = "#4A6ED8"; break;
                                                    case "Due Today": cellColor = "#FFFAE6"; textColor = "#B99E4C"; break;
                                                    case "Delayed": cellColor = "#FCE9EC"; textColor = "#D25567"; break;
                                                    case "Pending": cellColor = "#F0F0F0"; textColor = "#7A7A7A"; break;
                                                    default: cellColor = "#ffffff"; textColor = "#000000"; break;
                                                }

                                                <td style="text-align: center; position: relative;">
                                                    <div class="tooltip-container">
                                                        <span class="status-badge" style="background-color:@cellColor; color:@textColor;">
                                                            @combinedFormatted
                                                        </span>
                                                        <div class="custom-tooltip">
                                                            <strong>Status:</strong> @milestoneStatus
                                                            @if (milestoneStatus == "Completed")
                                                            { <span>✅</span> }
                                                            else if (milestoneStatus == "Active")
                                                            { <span>🟢</span> }
                                                            else if (milestoneStatus == "Due Today")
                                                            { <span>⏳</span> }
                                                            else if (milestoneStatus == "Delayed")
                                                            { <span>⚠️</span> }
                                                            else if (milestoneStatus == "Pending")
                                                            { <span>🕒</span> }
                                                            <br />
                                                            <strong>Due:</strong> @(currentEndDate?.ToString("MMM dd, yyyy") ?? "N/A")
                                                        </div>
                                                    </div>
                                                </td>
                                            }
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="@Model.UniqueMilestoneNames.Count() + 1" class="text-center text-muted">
                                            No projects found for your division.
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        </div>
    </div>*@

@section Scripts {
    <script>
    $(document).ready(function () {
        $(".main-body").removeClass("d-none");
        $(".loader-body").addClass("d-none");

        $('#projectSummaryTable').DataTable({
            responsive: true,
            pagingType: 'full_numbers',
            pageLength: 5,
            lengthMenu: [[5, 10, 25, 50, 100], [5, 10, 25, 50, 100]],
            language: {
                search: "_INPUT_",
                searchPlaceholder: "Search project name...",
                paginate: {
                    first: '«',
                    last: '»',
                    next: '›',
                    previous: '‹'
                },
                lengthMenu: "Show _MENU_ entries",
                info: "Showing _START_ to _END_ of _TOTAL_ entries"
            },
            dom: '<"top d-flex justify-content-between align-items-center"lfr>t<"bottom d-flex justify-content-between align-items-center"ip><"clear">',
            initComplete: function () {
                $('.dataTables_filter input').addClass('form-control').css({
                    'font-size': '14px',
                    'width': '280px',
                    'border-radius': '12px',
                    'padding': '10px 15px',
                    'background-color': '#f9f9f9',
                    'border': '1px solid #ccc',
                    'box-shadow': '0px 2px 4px rgba(0, 0, 0, 0.1)'
                });

                // ✅ Show Entries Dropdown (Softened)
                $('.dataTables_length select').addClass('form-select').css({
                    'font-size': '14px',
                    'width': 'auto',
                    'padding': '6px 12px',
                    'border-radius': '8px',
                    'border': '1px solid #ccc',
                    'background-color': 'white'
                });

                // ✅ Pagination Buttons (Rounded, Softer)
                $('.dataTables_paginate').css({
                    'margin-top': '20px',
                    'display': 'flex',
                    'justify-content': 'center',
                    'gap': '5px'
                });

                $('.dataTables_paginate .paginate_button').css({
                    'padding': '8px 12px',
                    'border-radius': '6px',
                    'border': '1px solid #ccc',
                    'background-color': 'white',
                    'color': '#66399A',
                    'font-size': '14px',
                    'transition': 'all 0.2s ease-in-out'
                });

                $('.dataTables_paginate .paginate_button:hover').css({
                    'background-color': '#e7dff3',
                    'color': '#470A67'
                });

                $('.dataTables_paginate .paginate_button.current').css({
                    'background-color': '#66399A',
                    'color': 'white',
                    'border': '1px solid #470A67'
                });

                $('#projectSummaryTable').css({
                    'border-collapse': 'separate',
                    'border-spacing': '0 12px'
                });

                $('#projectSummaryTable tbody tr').hover(function () {
                    $(this).css('background-color', '#f5f5f5');
                }, function () {
                    $(this).css('background-color', '');
                });
            }
        });
    });

    // ✅ Division Search & Tabs
    $(document).ready(function () {
        $('#divisionTabs a').on('click', function (e) {
            e.preventDefault();
            $(this).tab('show');
        });

        $('#divisionSearch').on('keyup', function () {
            const searchValue = $(this).val().toLowerCase();
            $('.division-tab').each(function () {
                const divisionName = $(this).data('division').toLowerCase();
                if (divisionName.includes(searchValue)) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });
        });
    });

    </script>
}