@model List<ProjectManagementSystem.Models.ProjectChecklistGroupViewModel>

@{
    ViewBag.Title = "Project Checklist • Project Management System";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2 class="text-center" style="font-family: 'Poppins', sans-serif; color: #4C2A85; font-weight: bold; margin-top: 20px;">
    Project Checklist
</h2>

<div class="container mb-4" style="max-width: 90%; margin: auto;">
    <div class="form-group">
        <label for="projectSelector" style="font-family: 'Poppins', sans-serif; font-size: 16px; color: #4C2A85;">Select project name:</label>
        <select id="projectSelector" class="form-control" style="font-family: 'Poppins', sans-serif; font-size: 14px;" onchange="filterProjectChecklists()">
            <option value="all">Show All Projects</option>
            @foreach (var group in Model)
            {
                <option value="@group.MainId">@group.ProjectName</option>
            }
        </select>
    </div>
</div>

<!-- Project Checklists Container -->
<div id="checklistsContainer" class="container" style="max-width: 90%; margin: auto;">
    @foreach (var group in Model)
    {
        <div class="project-checklist" data-project-id="@group.MainId" style="margin-bottom: 20px;">
            <div class="project-header d-flex align-items-center justify-content-between" style="padding: 15px; background-color: #4C2A85; color: white; border-radius: 8px;">
                <h4 style="margin: 0; font-family: 'Poppins', sans-serif;">@group.ProjectName</h4>
                @*<span style="background-color: #FFC107; color: #4C2A85; padding: 8px 12px; border-radius: 4px; font-size: 12px;">
                        Project ID: @group.MainId
                    </span>*@
            </div>

            <div class="milestones-container mt-3">
                @if (group.Milestones == null || !group.Milestones.Any())
                {
                    <div class="alert alert-warning text-center">No milestones available for this project.</div>
                }
                else
                {
                    bool canProceed = true;

                    foreach (var milestone in group.Milestones)
                    {
                        <div class="milestone-item p-3 mb-3" style="background-color: #f9f9f9; border-radius: 8px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);">
                            <div class="milestone-header d-flex align-items-center justify-content-between" style="margin-bottom: 15px;">
                                <h5 style="font-family: 'Poppins', sans-serif; font-size: 18px; margin: 0;">Milestone: @milestone.MilestoneName</h5>
                                <span class="badge badge-@(milestone.IsCompleted ? "success" : (canProceed ? "warning" : "danger"))"
                                      style="padding: 5px 10px; font-size: 12px;">
                                    @(milestone.IsCompleted ? "Completed" : (canProceed ? "In Progress" : "Locked"))
                                </span>
                            </div>

                            <div class="tasks-table">
                                <table class="table table-borderless">
                                    <thead style="font-family: 'Poppins', sans-serif; font-size: 14px; background-color: #F1F3F4;">
                                        <tr>
                                            <th style="width: 35%;">Task</th>
                                            <th style="width: 15%;">Status</th>
                                            <th style="width: 25%;">Approvers</th>
                                            <th style="width: 15%;">Attachments</th>
                                            @*<th style="width: 10%;">Actions</th>*@
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (milestone.Tasks == null || !milestone.Tasks.Any())
                                        {
                                            <tr>
                                                <td colspan="5" class="text-center">No tasks available</td>
                                            </tr>
                                        }
                                        else
                                        {
                                            foreach (var task in milestone.Tasks)
                                            {
                                                <tr>
                                                    <td>@task.TaskName</td>
                                                    <td>
                                                        <span class="badge badge-@(task.IsApproved.HasValue && task.IsApproved.Value ? "success" : "danger")">
                                                            @(task.IsApproved.HasValue && task.IsApproved.Value ? "Approved" : "Pending")
                                                        </span>
                                                    </td>
                                                    <td>
                                                        <ul style="list-style: none; padding: 0; margin: 0;">
                                                            @if (task.Approvers != null && task.Approvers.Any())
                                                            {
                                                                foreach (var approver in task.Approvers)
                                                                {
                                                                    <li>@approver.ApproverName - @(approver.Status ? "Approved" : "Pending")</li>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <li>No approvers assigned</li>
                                                            }
                                                        </ul>
                                                    </td>
                                                    <td>
                                                        <ul style="list-style: none; padding: 0; margin: 0;">
                                                            @if (task.Attachments != null && task.Attachments.Any())
                                                            {
                                                                foreach (var attachment in task.Attachments)
                                                                {
                                                                    <li><a href="@attachment" target="_blank" class="btn btn-link p-0">View</a></li>
                                                                }
                                                            }
                                                            <li>
                                                                <button class="btn btn-sm btn-outline-success mt-1" onclick="openFileUploadModal(@task.Id)" @(canProceed ? "" : "disabled")>
                                                                    Upload
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </td>
                                                    @*<td>
                                                        <button class="btn btn-sm btn-outline-primary mt-1" onclick="approveTask(@task.Id)" @(canProceed ? "" : "disabled")>
                                                            Approve
                                                        </button>
                                                    </td>*@
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        canProceed = milestone.IsCompleted;
                    }
                }
            </div>
        </div>
    }
</div>
<script>
    function filterProjectChecklists() {
        var selectedProject = document.getElementById("projectSelector").value;
        var checklists = document.querySelectorAll(".project-checklist");

        checklists.forEach(function (checklist) {
            if (selectedProject === "all" || checklist.dataset.projectId === selectedProject) {
                checklist.style.display = "block";
            } else {
                checklist.style.display = "none";
            }
        });
    }

    function approveTask(taskId) {
        alert("Approved.")
    }


    function openFileUpload(taskId) {
        document.getElementById("taskIdInput").value = taskId;
        $("#fileUploadModal").modal("show");
    }
    function uploadFile() {
        var formData = new FormData(document.getElementById("fileUploadForm"));
        $.ajax({
            url: '/FileUpload/UploadFile',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                alert(response.message);
                $("#fileUploadModal").modal("hide");
            },
            error: function () {
                alert("File upload failed!");
            }
        });
    }
</script>

<style>
    .card {
        border: none;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .btn-outline-success, .btn-outline-primary {
        font-family: 'Poppins', sans-serif;
    }

    .badge-success {
        background-color: #28a745;
        color: white;
    }

    .badge-danger {
        background-color: #dc3545;
        color: white;
    }

    .badge-warning {
        background-color: #ffc107;
        color: white;
    }

    .btn[disabled] {
        background-color: #ccc !important;
        cursor: not-allowed !important;
    }
</style>