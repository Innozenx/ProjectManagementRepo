@model ProjectManagementSystem.Models.ProjectMilestoneViewModel
@{
    ViewBag.Title = "Milestone";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>

<style>
    body {
        font-family: 'Poppins', sans-serif;
        background-color: #f4f6f9;
        margin: 0;
        padding: 0;
    }

    .card-container {
        display: flex;
        justify-content: center;
        margin-top: 10px;
        padding: 20px;
    }

    .table-container {
        background-color: #fff;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 1200px;
        margin: 0 auto;
    }
    .action-tiles-container {
        display: flex;
        gap: 10px;
        margin-right: 40px;
        margin-top: 20px;
    }

    .action-tiles-container {
        display: flex;
        justify-content: flex-end; 
        gap: 10px; 
        margin-top: 20px;
    }

    .action-tile {
        background-color: #66399A;
        color: white;
        border-radius: 8px;
        padding: 10px 15px;
        width: auto;
        min-width: 80px;
        text-align: center;
        cursor: pointer;
        transition: background-color 0.3s ease, transform 0.3s ease;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .action-tile:hover {
        background-color: #552788;
        transform: translateY(-3px);
    }

    .action-tile i {
        font-size: 18px;
        margin-bottom: 5px;
    }

    .action-tile-title {
        font-size: 0.85rem; 
        white-space: nowrap;
    }

    h3 {
        font-weight: bold;
        color: #66399A;
        text-align: left;
        font-size: 24px;
        margin-bottom:10px;
        margin-left: 15px;
        margin-top: 5px;
    }

    #projectDetails {
        width: 100%;
        font-size: 14px;
        border-collapse: collapse;
    }

    #projectDetails th, #projectDetails td {
        padding: 10px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    #projectDetails th {
        font-weight: bold;
        color: #555;
    }

    #projectDetails td a {
        color: #66339A;
        text-decoration: none;
    }

    #projectDetails td a:hover {
        text-decoration: underline;
    }

    #projectDetails td {
        color: #333;
    }

    .gantt-header {
        display: flex;
        justify-content: space-between;
        margin-bottom: 15px;
    }

    .gantt-view-btn {
        background-color: #66399A;
        border: none;
        color: white;
        padding: 8px 15px;
        font-size: 14px;
        border-radius: 5px;
        cursor: pointer;
        margin-right: 5px;
        transition: background-color 0.3s ease;
    }

    .gantt-view-btn:hover,
    .gantt-view-btn.active {
        background-color: #552788;
    }

    .gantt-nav-btn,
    .gantt-today-btn {
        background-color: #f9f9f9;
        border: 1px solid #ddd;
        color: #333;
        padding: 8px 12px;
        font-size: 14px;
        border-radius: 5px;
        cursor: pointer;
        margin-right: 5px;
    }

    .gantt-nav-btn:hover,
    .gantt-today-btn:hover {
        background-color: #eaeaea;
    }

    .btn-primary {
        background-color: #66339A;
        border: none;
        padding: 10px 20px;
        color: #fff;
        /*font-weight: bold;*/
        border-radius: 5px;
        transition: background-color 0.3s ease;
        width: 100%;
        margin-top: 15px;
    }

    .activity-log-container {
        max-height: 500px;
        overflow-y: auto;
    }

    .timeline {
        position: relative;
        padding: 0;
        list-style: none;
    }

    .timeline-item {
        display: flex;
        padding: 15px 0;
        position: relative;
        align-items: center;
    }

    .timeline-icon {
        flex-shrink: 0;
        width: 40px;
        height: 40px;
        background-color: #66399A;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 18px;
        margin-right: 15px;
    }

    .timeline-content {
        flex-grow: 1;
        background-color: #f9f9f9;
        border-radius: 5px;
        padding: 10px 15px;
    }

    .timeline-time {
        font-weight: bold;
        font-size: 14px;
        color: #555;
    }

    .timeline-details strong {
        display: block;
        color: #66399A;
        font-size: 16px;
    }

    .timeline-details p {
        margin: 5px 0;
        font-size: 14px;
    }

    .timeline-details small {
        color: #888;
    }


</style>



<!-- Project Details Section -->
<div class="card-container">
    <div class="table-container">
        <h3>Project Details</h3>
        @if (Model.ProjectDetails.Any())
        {
            var data = Model.ProjectDetails.FirstOrDefault();

            <table id="projectDetails">
                <tr>
                    <td style="vertical-align: top; width: 50%;">
                        <table style="width: 100%;">
                            <tr>
                                <th>Project Title:</th>
                                <td>
                                    <a href="@Url.Action("weeklyMilestone", "Checklist", new { id = data.Id, title = data.ProjectTitle, projectId = data.DetailsID })">
                                        @data.ProjectTitle
                                    </a>
                                </td>
                            </tr>
                            <tr>
                                <th>Project Start:</th>
                                <td>@DateTime.Parse(data.ProjectStart).ToString("MMMM dd, yyyy")</td>
                            </tr>
                            <tr>
                                <th>Project End:</th>
                                <td>@DateTime.Parse(data.ProjectEnd).ToString("MMMM dd, yyyy")</td>
                            </tr>
                            <tr>
                                <th>Duration:</th>
                                <td>@data.ProjectDuration days</td>
                            </tr>
                        </table>
                    </td>
                    <td style="vertical-align: top; width: 50%;">
                        <table style="width: 100%;">
                            <tr>
                                <th>Year:</th>
                                <td>@data.ProjectYear</td>
                            </tr>
                            <tr>
                                <th>Division:</th>
                                <td>@data.Division</td>
                            </tr>
                            <tr>
                                <th>Category:</th>
                                <td>@data.Category</td>
                            </tr>
                            <tr>
                                <th>Project Owner:</th>
                                <td>@data.ProjectOwner</td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>
        }
    </div>
</div>

<!-- Update Status and Activity Log Tiles -->
<div class="action-tiles-container">
    <div class="action-tile" data-toggle="modal" data-target="#updateMilestoneModal">
        <i class="fas fa-edit"></i>
        <div class="action-tile-title">Update Status</div>
    </div>
    <div class="action-tile" data-toggle="modal" data-target="#activityLogModal">
        <i class="fas fa-history"></i>
        <div class="action-tile-title">Activity</div>
    </div>
</div>

<!-- Update Status Modal -->
<div class="modal fade" id="updateMilestoneModal" tabindex="-1" role="dialog" aria-labelledby="updateMilestoneLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content shadow-lg rounded">
            <div class="modal-header bg-white">
                <h5 class="modal-title" id="updateMilestoneLabel">Update Status</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body bg-white p-4">
                @using (Html.BeginForm("UpdateStatus", "Checklist", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="form-group mb-4">
                        <label for="milestone" class="milestone-text">Select Milestone</label>
                        @Html.DropDownListFor(m => m.SelectedMilestone, Model.Milestones, "Choose a Milestone", new { @class = "form-control rounded border-light" })
                    </div>

                    <div class="form-group mb-4">
                        <label for="statusUpdate" class="status-update">Status Update</label>
                        @Html.TextAreaFor(m => m.StatusUpdate, new { @class = "form-control rounded border-light", placeholder = "Add more detailed description...", rows = 3 })
                    </div>

                    <div class="form-group mb-4">
                        <label for="fileUpload" class="select-attach">Attachment</label>
                        <input type="file" name="fileUpload" id="fileUpload" class="form-control-file" />
                    </div>

                    <div class="d-flex justify-content-end">
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Activity Logs -->
<div class="modal fade" id="activityLogModal" tabindex="-1" role="dialog" aria-labelledby="activityLogLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content shadow-lg rounded">
            <div class="modal-header bg-white">
                <h5 class="modal-title" id="activityLogLabel">Activity Log</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body bg-white p-4">
                <div class="activity-log-container">
                    @if (Model.ActivityLogs != null && Model.ActivityLogs.Any())
                    {
                        <div class="timeline">
                            @foreach (var log in Model.ActivityLogs)
                            {
                                <div class="timeline-item">
                                    <div class="timeline-icon">
                                        <i class="fas fa-user-circle"></i>
                                    </div>
                                    <div class="timeline-content">
                                        <span class="timeline-time">
                                            @(log.DatetimePerformed.HasValue ? log.DatetimePerformed.Value.ToString("hh:mm tt") : "No time available")
                                        </span>
                                        <div class="timeline-details">
                                            <strong>@log.Username</strong>
                                            <p>@log.Action</p>
                                            <small class="text-muted">@log.Description</small>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">No activity logs available.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>



<!-- Gantt Chart Section -->
<div class="card-container">
    <div class="table-container">
        <div class="gantt-header">
            <div class="gantt-view-controls">
                <button id="day-view" class="gantt-view-btn active">Day</button>
                <button id="week-view" class="gantt-view-btn">Week</button>
                <button id="month-view" class="gantt-view-btn">Month</button>
            </div>
            <div class="gantt-date-controls">
                <button id="prev-date" class="gantt-nav-btn">«</button>
                <span id="date-range"></span>
                <button id="today-btn" class="gantt-today-btn">Today</button>
                <button id="next-date" class="gantt-nav-btn">»</button>
            </div>
        </div>
        <div id="gantt_here" style="width:100%; height:60vh;"></div>
    </div>
</div>

@section scripts {
    <script>
        // Gantt chart configuration and initialization
        document.addEventListener("DOMContentLoaded", function () {
            gantt.config.xml_date = "%Y-%m-%d %H:%i";
            gantt.config.readonly = true;

            gantt.config.columns = [
                { name: "text", label: "Milestone", tree: true, width: 200 },
                { name: "duration", label: "Duration", align: "center", width: 70 },
                { name: "start_date", label: "Start", align: "center", width: 90 },
                { name: "end_date", label: "Finish", align: "center", width: 90 }
            ];


            gantt.config.scales = [{ unit: "week", date: "%d %M" }]
            gantt.config.scales = [{ unit: "month", date: "%F" }]

            //gantt.config.scale_unit = "week";
            //gantt.config.date_scale = "%d %M";
            //gantt.config.subscales = [{ unit: "month", step: 1, date: "%F" }];
            //gantt.config.scale_height = 50;

            gantt.init("gantt_here");

            gantt.load(`/Checklist/getGanttData?id=${@TempData["entry"]}`, "json");

            const updateDateRangeDisplay = () => {
                const dateRange = gantt.getState().min_date;
                const endDate = gantt.getState().max_date;
                document.getElementById("date-range").innerText =
                    gantt.templates.date_range(dateRange, endDate);
            };

            document.querySelectorAll('.gantt-view-btn').forEach(button => {
                button.addEventListener('click', function () {
                    document.querySelectorAll('.gantt-view-btn').forEach(btn => btn.classList.remove('active'));
                    this.classList.add('active');

                    switch (this.id.split('-')[0]) {
                        case 'day': setDayView(); break;
                        case 'week': setWeekView(); break;
                        case 'month': setMonthView(); break;
                    }
                    updateDateRangeDisplay();
                });
            });

            gantt.templates.date_range = (start, end) => {
                return gantt.templates.date_to_str("%d %M %Y")(start) + " - " + gantt.templates.date_to_str("%d %M %Y")(end);
            };

            document.getElementById("prev-date").addEventListener("click", () => gantt.navigateLeft() & updateDateRangeDisplay());
            document.getElementById("next-date").addEventListener("click", () => gantt.navigateRight() & updateDateRangeDisplay());
            document.getElementById("today-btn").addEventListener("click", () => gantt.showDate(new Date()) & updateDateRangeDisplay());

            const setDayView = () => {
                //gantt.config.scale_unit = "day";
                //gantt.config.subscales = [{ unit: "day", step: 1, date: "%d" }];
                gantt.config.scales = [{unit: "day"}]
                gantt.render();
            };

            const setWeekView = () => {
                //gantt.config.scale_unit = "week";
                //gantt.config.subscales = [{ unit: "week", step: 1, date: "Week %W" }];
                gantt.config.scales = [{ unit: "week" }]
                gantt.render();
            };

            const setMonthView = () => {
                //gantt.config.scale_unit = "month";
                //gantt.config.subscales = [{ unit: "month", step: 1, date: "%F" }];
                gantt.config.scales = [{ unit: "month" }]
                gantt.render();
            };

            setWeekView();
            updateDateRangeDisplay();
        });
    </script>
}
