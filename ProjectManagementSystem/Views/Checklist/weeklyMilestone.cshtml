@model ProjectManagementSystem.Models.ProjectMilestoneViewModel
@{
    ViewBag.Title = "Milestone";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    body {
        font-family: 'Poppins', sans-serif;
        background-color: #f4f6f9;
        margin: 0;
        padding: 0;
    }

    .card-container {
        display: flex;
        justify-content: center;
        margin-top: 10px;
        padding: 20px;
    }

    .table-container {
        background-color: #fff;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 1200px;
        margin: 0 auto;
    }

    h3 {
        font-weight: bold;
        color: #66399A;
        text-align: center;
        font-size: 24px;
        margin-bottom: 20px;
    }

    #projectDetails {
        width: 100%;
        font-size: 14px;
        border-collapse: collapse;
    }

        #projectDetails th, #projectDetails td {
            padding: 10px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        #projectDetails th {
            font-weight: bold;
            color: #555;
        }

        #projectDetails td a {
            color: #66339A;
            text-decoration: none;
        }

            #projectDetails td a:hover {
                text-decoration: underline;
            }

        #projectDetails td {
            color: #333;
        }

    .gantt-header {
        display: flex;
        justify-content: space-between;
        margin-bottom: 15px;
    }

    .gantt-view-btn {
        background-color: #66399A;
        border: none;
        color: white;
        padding: 8px 15px;
        font-size: 14px;
        border-radius: 5px;
        cursor: pointer;
        margin-right: 5px;
        transition: background-color 0.3s ease;
    }

        .gantt-view-btn:hover, .gantt-view-btn.active {
            background-color: #552788;
        }

    .gantt-nav-btn, .gantt-today-btn {
        background-color: #f9f9f9;
        border: 1px solid #ddd;
        color: #333;
        padding: 8px 12px;
        font-size: 14px;
        border-radius: 5px;
        cursor: pointer;
        margin-right: 5px;
    }

        .gantt-nav-btn:hover, .gantt-today-btn:hover {
            background-color: #eaeaea;
        }

    #gantt_here {
        margin-top: 20px;
        height: 60vh;
        border-radius: 10px;
        border: 1px solid #ddd;
    }

    @@media (max-width: 768px) {
        .gantt-header {
            flex-direction: column;
        }

        .gantt-view-btn, .gantt-nav-btn, .gantt-today-btn {
            width: 100%;
            text-align: center;
            margin-bottom: 10px;
        }

        .modal-content {
            border-radius: 8px;
            border: none;
            box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.1);
        }

        .modal-dialog.modal-lg {
            max-width: 900px;
        }

        .modal-header {
            border-bottom: none;
        }

            .modal-header .close {
                font-size: 1.5rem;
            }

        .form-control {
            border: 1px solid #ddd;
            font-size: 14px;
            padding: 12px;
            border-radius: 6px;
            transition: border-color 0.2s;
        }

        .form-control:focus {
            border-color: #007bff;
            box-shadow: none;
        }

        .buttons-container {
            display: flex;
            justify-content: flex-end;
            margin: 20px 20px 0 0;
            margin-right: 40px;
            gap: 10px;
        }

        .btn-primary {
            background-color: #66399A;
            border: none;
            color: white;
            padding: 10px 20px;
            font-size: 14px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            .btn-primary:hover {
                background-color: #552788;
            }

        .text-muted {
            color: #6c757d;
        }

        .btn-success {
            color: #66399A;
        }
    }
</style>

<!-- Update Status and Activity Log Buttons -->
<div class="buttons-container">
    <button class="btn btn-primary" data-toggle="modal" data-target="#updateMilestoneModal">
        Update Status
    </button>
    <button class="btn btn-primary" data-toggle="modal" data-target="#activityLog">
        Activity Log
    </button>
</div>

<!-- Project Details Section -->
<div class="card-container">
    <div class="table-container">
        <h3>Project Details</h3>
        @if (Model.ProjectDetails.Any())
        {
            var data = Model.ProjectDetails.FirstOrDefault();

            <table id="projectDetails">
                <tr>
                    <td style="vertical-align: top; width: 50%;">
                        <table style="width: 100%;">
                            <tr>
                                <th>Project Title:</th>
                                <td>
                                    <a href="@Url.Action("weeklyMilestone", "Checklist", new { id = data.Id, title = data.ProjectTitle, projectId = data.DetailsID })">
                                        @data.ProjectTitle
                                    </a>
                                </td>
                            </tr>
                            <tr>
                                <th>Project Start:</th>
                                <td>@DateTime.Parse(data.ProjectStart).ToString("MMMM dd, yyyy")</td>
                            </tr>
                            <tr>
                                <th>Project End:</th>
                                <td>@DateTime.Parse(data.ProjectEnd).ToString("MMMM dd, yyyy")</td>
                            </tr>
                            <tr>
                                <th>Duration:</th>
                                <td>@data.ProjectDuration days</td>
                            </tr>
                        </table>
                    </td>
                    <td style="vertical-align: top; width: 50%;">
                        <table style="width: 100%;">
                            <tr>
                                <th>Year:</th>
                                <td>@data.ProjectYear</td>
                            </tr>
                            <tr>
                                <th>Division:</th>
                                <td>@data.Division</td>
                            </tr>
                            <tr>
                                <th>Category:</th>
                                <td>@data.Category</td>
                            </tr>
                            <tr>
                                <th>Project Owner:</th>
                                <td>@data.ProjectOwner</td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>
        }
    </div>
</div>

<!-- Update Status Modal -->
<div class="modal fade" id="updateMilestoneModal" tabindex="-1" role="dialog" aria-labelledby="updateMilestoneLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content shadow-lg rounded">
            <div class="modal-header bg-white">
                <h5 class="modal-title" id="updateMilestoneLabel">Update Status</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body bg-white p-4">
                @using (Html.BeginForm("UpdateStatus", "Checklist", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="form-group mb-4">
                        <label for="milestone" class="text-muted">Select Milestone</label>
                        @Html.DropDownListFor(m => m.SelectedMilestone, Model.Milestones, "Choose a Milestone", new { @class = "form-control rounded border-light" })
                    </div>

                    <div class="form-group mb-4">
                        <label for="statusUpdate" class="text-muted">Status Update</label>
                        @Html.TextAreaFor(m => m.StatusUpdate, new { @class = "form-control rounded border-light", placeholder = "Add more detailed description...", rows = 3 })
                    </div>

                    <div class="form-group mb-4">
                        <label for="fileUpload" class="text-muted">Attachment</label>
                        <input type="file" name="fileUpload" id="fileUpload" class="form-control-file" />
                    </div>

                    <div class="d-flex justify-content-end">
                        <button type="submit" class="btn btn-primary rounded-pill px-4 py-2">Submit</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Gantt Chart Section -->
<div class="card-container">
    <div class="table-container">
        <div class="gantt-header">
            <div class="gantt-view-controls">
                <button id="day-view" class="gantt-view-btn active">Day</button>
                <button id="week-view" class="gantt-view-btn">Week</button>
                <button id="month-view" class="gantt-view-btn">Month</button>
            </div>
            <div class="gantt-date-controls">
                <button id="prev-date" class="gantt-nav-btn">«</button>
                <span id="date-range"></span>
                <button id="today-btn" class="gantt-today-btn">Today</button>
                <button id="next-date" class="gantt-nav-btn">»</button>
            </div>
        </div>
        <div id="gantt_here" style="width:100%; height:60vh;"></div>
    </div>
</div>

@section scripts {
    <script>
        // Gantt chart configuration and initialization
        document.addEventListener("DOMContentLoaded", function () {
            gantt.config.xml_date = "%Y-%m-%d %H:%i";
            gantt.config.readonly = true;

            gantt.config.columns = [
                { name: "text", label: "Milestone", tree: true, width: 200 },
                { name: "duration", label: "Duration", align: "center", width: 70 },
                { name: "start_date", label: "Start", align: "center", width: 90 },
                { name: "end_date", label: "Finish", align: "center", width: 90 }
            ];

            gantt.config.scale_unit = "week";
            gantt.config.date_scale = "%d %M";
            gantt.config.subscales = [{ unit: "month", step: 1, date: "%F" }];
            gantt.config.scale_height = 50;

            gantt.init("gantt_here");

            gantt.load(`/Checklist/getGanttData?id=${@TempData["entry"]}`, "json");

            const updateDateRangeDisplay = () => {
                const dateRange = gantt.getState().min_date;
                const endDate = gantt.getState().max_date;
                document.getElementById("date-range").innerText =
                    gantt.templates.date_range(dateRange, endDate);
            };

            document.querySelectorAll('.gantt-view-btn').forEach(button => {
                button.addEventListener('click', function () {
                    document.querySelectorAll('.gantt-view-btn').forEach(btn => btn.classList.remove('active'));
                    this.classList.add('active');

                    switch (this.id.split('-')[0]) {
                        case 'day': setDayView(); break;
                        case 'week': setWeekView(); break;
                        case 'month': setMonthView(); break;
                    }
                    updateDateRangeDisplay();
                });
            });

            gantt.templates.date_range = (start, end) => {
                return gantt.templates.date_to_str("%d %M %Y")(start) + " - " + gantt.templates.date_to_str("%d %M %Y")(end);
            };

            document.getElementById("prev-date").addEventListener("click", () => gantt.navigateLeft() & updateDateRangeDisplay());
            document.getElementById("next-date").addEventListener("click", () => gantt.navigateRight() & updateDateRangeDisplay());
            document.getElementById("today-btn").addEventListener("click", () => gantt.showDate(new Date()) & updateDateRangeDisplay());

            const setDayView = () => {
                gantt.config.scale_unit = "day";
                gantt.config.subscales = [{ unit: "day", step: 1, date: "%d" }];
                gantt.render();
            };

            const setWeekView = () => {
                gantt.config.scale_unit = "week";
                gantt.config.subscales = [{ unit: "week", step: 1, date: "Week %W" }];
                gantt.render();
            };

            const setMonthView = () => {
                gantt.config.scale_unit = "month";
                gantt.config.subscales = [{ unit: "month", step: 1, date: "%F" }];
                gantt.render();
            };

            setWeekView();
            updateDateRangeDisplay();
        });
    </script>
}
