@model ProjectManagementSystem.Models.Onboarding

@{
    ViewBag.Title = "Project Onboarding • Project Management System";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="loader-body">
    <div class="loader-container">
        <span class="loader-span"></span>
        <div class="loader-center">
            <div class="loader-wrap">
                <div class="box-1 box">

                    <i><img src="~/FrontEnd/dist/img/smiley_eldar.png" class="eldar-img" /></i>
                    <i><img src="~/FrontEnd/dist/img/happy_eldar.png" class="eldar-img" /></i>
                </div>
                <div class="box-2 box">
                    <i><img src="~/FrontEnd/dist/img/smiley_eldar.png" class="eldar-img" /></i>
                    <i><img src="~/FrontEnd/dist/img/happy_eldar.png" class="eldar-img" /></i>
                </div>
            </div>
        </div>
    </div>
</div>

<a href="https://dribbble.com/YancyMin" class="dr-url" target="_blank"><img class="dr" src="https://cdn.dribbble.com/assets/logo-footer-hd-a05db77841b4b27c0bf23ec1378e97c988190dfe7d26e32e1faea7269f9e001b.png" alt=""></a>

<div class="main-body d-none">
    <div class="content">
        <div class="form-container">
            <div class="form-header" style="text-align: center;">
                <h3>
                    <span class="launch-rocket">🚀</span><br />
                    Start Your New Project
                </h3>
                <p>
                    Upload your project schedule here. 📂
                </p>
            </div>

            <form id="onboardingForm" name="onboardingForm" enctype="multipart/form-data">
                @Html.AntiForgeryToken()

            <div id="errorContainer" class="alert-error" style="display: none;"></div>

            <div class="form-group">
                <label for="projectDropdown">Project Name</label>
                <select id="projectDropdown" class="form-select" required>
                    <option value="" disabled selected>Choose a project...</option>
                    @foreach (var project in Model.registered_project)
                    {
                        <option value="@project.registration_id">@project.project_name</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label for="projectOwner">Project Owner</label>
                <input type="text" id="projectOwner" name="projectOwner" class="form-control" placeholder="Project owner" required readonly />
            </div>

                <div class="form-group">
                    <label for="csvFileInput">Upload Project Schedule</label>
                    <input type="file" id="csvFileInput" name="csvFileInput" accept=".csv" class="form-control-file" required />
                    <small class="form-text">Accepted format: .csv</small>
                </div>

            <div class="button-container">
                <button id="addProjButton" type="button" class="btn btn-primary" onclick="AddProject()">Submit</button>
            </div>
        </form>
    </div>
</div>


<style>
    body {
        font-family: 'Poppins', sans-serif;
        background-color: #f4f6f9;
        margin: 0;
        padding: 0;
    }

    .content {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 20px;
        min-height: 100vh;
    }

    .form-container {
        width: 100%;
        max-width: 700px;
        padding: 40px;
        background-color: white;
        border-radius: 15px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
        animation: fadeIn 0.8s ease-in-out;
        margin-top: 30px;
        margin-bottom: 30px;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .form-header {
        text-align: center;
        margin-bottom: 20px;
    }

        .form-header h3 {
            font-size: 2rem;
            color: #66339A;
            margin-bottom: 10px;
        }

        .form-header p {
            font-size: 1rem;
            color: #666;
        }

    .form-group {
        margin-bottom: 25px;
    }

        .form-group label {
            font-size: 14px;
            font-weight: 200 !important;
            color: gray;
            margin-bottom: 5px;
        }

    .form-select,
    .form-control,
    .form-control-file {
        width: 100%;
        padding: 10px;
        border-radius: 5px;
        border: 1px solid #ddd;
        font-size: 14px;
        color: #333;
        background-color: #f9f9f9;
        outline: none;
        transition: all 0.3s ease;
    }

        .form-select:focus,
        .form-control:focus {
            border-color: #66339A;
            box-shadow: 0 0 5px rgba(102, 51, 154, 0.2);
        }

        .form-control-file:hover {
            border-color: #66339A;
            box-shadow: 0 0 5px rgba(102, 51, 154, 0.2);
        }

    .alert-error {
        background-color: #f8d7da;
        color: #842029;
        padding: 12px 16px;
        border: 1px solid #f5c2c7;
        border-radius: 6px;
        font-size: 14px;
        margin-bottom: 20px;
    }

    .btn-primary {
        background-color: #66339A;
        color: #fff;
        font-size: 1rem;
        padding: 10px 20px;
        border: none;
        border-radius: 30px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        text-align: center;
        width: 100%;
        margin: 20px auto;
    }

        .btn-primary:hover {
            background-color: #532c7e;
        }

    .launch-rocket {
        display: inline-block;
        animation: rocketLaunch 2.5s ease-in-out infinite;
        transform-origin: bottom center;
    }

    @@keyframes rocketLaunch {
        0% {
            transform: translateY(0) rotate(0deg);
            opacity: 1;
        }

        30% {
            transform: translateY(-10px) rotate(-5deg);
        }

        50% {
            transform: translateY(-20px) rotate(5deg);
            opacity: 0.9;
        }

        70% {
            transform: translateY(-30px) rotate(-3deg);
        }

        100% {
            transform: translateY(-40px) rotate(0deg);
            opacity: 0;
        }
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    function AddProject() {
        const projectDropdown = document.getElementById("projectDropdown");
        const projectOwner = document.getElementById("projectOwner");
        const csvFileInput = document.getElementById("csvFileInput");
        const csvFile = csvFileInput.files[0];
        let isValid = true;

        resetFieldStyles();

        if (!projectDropdown.value) {
            setFieldError(projectDropdown, "Please select a project.");
            isValid = false;
        }

        if (!projectOwner.value.trim()) {
            setFieldError(projectOwner, "Project owner is required.");
            isValid = false;
        }

        if (!csvFile) {
            setFieldError(csvFileInput, "Please upload a CSV file.");
            isValid = false;
        }

        if (!isValid) return;

        const formData = new FormData();
        formData.append("projectTitle", projectDropdown.value);
        formData.append("csvFile", csvFile);

        $(".main-body").addClass("d-none");
        $(".loader-body").removeClass("d-none");

        $.ajax({
            url: '/Checklist/AddProjectUpload',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                $(".main-body").removeClass("d-none");
                $(".loader-body").addClass("d-none");

                if (response.status) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Upload Complete!',
                        text: 'Redirecting to Invite Teammates...',
                        confirmButtonColor: '#66339A'
                    }).then(() => {
                        window.location.href = "/Checklist/InviteTeammates?projectTitle=" + encodeURIComponent(projectDropdown.value);
                    });
                } else {
                    displayError(response.message || "Something went wrong.");
                }
            },
            error: function () {
                Swal.close();
                displayError("Something went wrong while submitting your project.");
            }
        });
    }

    function resetFieldStyles() {
        document.querySelectorAll("#projectDropdown, #projectOwner, #csvFileInput").forEach(f => f.style.borderColor = "");
        clearError();
    }

    function setFieldError(field, message) {
        field.style.borderColor = "#d9534f";
        displayError(message);
    }

    function displayError(message) {
        const errorContainer = document.getElementById("errorContainer");
        errorContainer.style.display = "block";
        errorContainer.innerText = message;
    }

    function clearError() {
        const errorContainer = document.getElementById("errorContainer");
        errorContainer.innerText = "";
        errorContainer.style.display = "none";
    }

    document.getElementById("csvFileInput").addEventListener("change", function () {
        const file = this.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                const csvContent = e.target.result;
                const rows = csvContent.split("\n").map(row => row.split(","));
                const headerRow = rows[0];
                const ownerIndex = headerRow.findIndex(col => col.trim().toLowerCase() === "owner");

                if (ownerIndex !== -1) {
                    const ownerName = rows[1] ?.[ownerIndex] ?.trim();
                    if (ownerName) {
                        document.getElementById("projectOwner").value = ownerName;
                    } else {
                        document.getElementById("projectOwner").value = "";
                        Swal.fire({
                            icon: 'warning',
                            title: 'Missing Info',
                            text: 'No owner information found in the uploaded file.'
                        });
                    }
                } else {
                    document.getElementById("projectOwner").value = "";
                    Swal.fire({
                        icon: 'warning',
                        title: 'Missing Column',
                        text: "The 'Owner' column is missing in the uploaded CSV."
                    });
                }
            };
            reader.readAsText(file);
        }
    });

    $(document).ready(function(){
        $(".main-body").removeClass("d-none");
        $(".loader-body").addClass("d-none");
    });
</script>
