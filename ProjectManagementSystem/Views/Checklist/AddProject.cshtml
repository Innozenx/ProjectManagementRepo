@model ProjectManagementSystem.Models.Onboarding

@{
    ViewBag.Title = "Project Onboarding";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="content">
    <div class="form-container">
        <div class="form-header">
            <h3>Create a new project</h3>
            <p>Provide the necessary details to onboard your project.</p>
        </div>

        <form id="onboardingForm" name="onboardingForm" enctype="multipart/form-data">
            @Html.AntiForgeryToken()

            <div class="form-group">
                <label for="projectDropdown">Project Name</label>
                <select id="projectDropdown" class="form-select" required>
                    <option value="" disabled selected>Choose a project...</option>
                    @foreach (var project in Model.registered_project)
                    {
                        <option value="@project.registration_id">@project.project_name</option>
                    }
                </select>
                <span id="projectError" class="error-message">Project name is required.</span>
            </div>


            <div class="form-group">
                <label for="projectOwner">Project Owner</label>
                <input type="text" id="projectOwner" name="projectOwner" class="form-control" placeholder="Enter project owner name" required />
            </div>

            <div class="form-group">
                <label for="csvFileInput">Upload Project Schedule</label>
                <input type="file" id="csvFileInput" name="csvFileInput" accept=".csv" class="form-control-file" required />
                <small class="form-text">Accepted format: .csv</small>
            </div>

            <div class="button-container">
                <button id="addProjButton" type="button" class="btn-primary" onclick="AddProject()">Submit Project</button>
            </div>
        </form>
    </div>
</div>
<style>
        body {
        font-family: 'Poppins', sans-serif;
        background-color: #f4f6f9;
        margin: 0;
        padding: 0;
        }

        .content {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 20px;
        min-height: 100vh;
        }

        .form-container {
        width: 100%;
        max-width: 700px;
        padding: 40px;
        background-color: white;
        border-radius: 15px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
        animation: fadeIn 0.8s ease-in-out;
        }

        @@keyframes fadeIn {
        from {
        opacity: 0;
        transform: translateY(10px);
        }
        to {
        opacity: 1;
        transform: translateY(0);
        }
        }

        .form-header {
        text-align: center;
        margin-bottom: 20px;
        }

        .form-header h3 {
        font-size: 2rem;
        color: #66339A;
        margin-bottom: 10px;
        }

        .form-header p {
        font-size: 1rem;
        color: #666;
        }

    .form-group {
        margin-bottom: 20px;
    }

        .form-group label {
            font-size: 14px;
            font-weight: bold;
            color: gray;
            margin-bottom: 5px;
        }

    .form-select {
        width: 100%;
        padding: 10px;
        border-radius: 5px;
        border: 1px solid #ddd;
        font-size: 14px;
        color: #333;
        background-color: #f9f9f9;
        transition: border-color 0.3s ease, box-shadow 0.3s ease;
        outline: none;
    }

        .form-select:focus {
            border-color: #470A67;
            box-shadow: 0 0 5px rgba(71, 10, 103, 0.4);
        }

        .error-message {
            display: none; 
            color: #d9534f; 
            font-size: 12px;
            margin-top: 5px;
        }


        .form-select,
        .form-control,
        .form-control-file {
        width: 100%;
        padding: 10px;
        border-radius: 5px;
        border: 1px solid #ddd;
        font-size: 14px;
        color: #333;
        outline: none;
        transition: all 0.3s ease;
        }

        .form-select:focus,
        .form-control:focus {
        border-color: #470A67;
        box-shadow: 0 0 5px rgba(71, 10, 103, 0.4);
        }

        .form-control-file {
        padding: 10px;
        }

        .btn-primary {
        background-color: #470A67;
        color: #fff;
        font-size: 1rem;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        display: inline-block;
        text-align: center;
        margin-top: 10px;
        }

        .btn-primary:hover {
        background-color: #2d5bb8;
        }

        @@media (max-width: 768px) {
        .form-container {
        padding: 20px;
        }

        .form-header h3 {
        font-size: 1.5rem;
        }

        .form-header p {
        font-size: 0.9rem;
        }

        .btn-primary {
        width: 100%;
        }
    }

</style>
<script>
    function AddProject() {
        const projectDropdown = document.getElementById("projectDropdown");
        const projectOwner = document.getElementById("projectOwner");
        const csvFileInput = document.getElementById("csvFileInput");
        const csvFile = csvFileInput.files[0];
        let isValid = true;

        resetFieldStyles();

        if (!projectDropdown.value) {
            setFieldError(projectDropdown, "Project name is required.");
            isValid = false;
        }

        if (!projectOwner.value.trim()) {
            setFieldError(projectOwner, "Project owner is required.");
            isValid = false;
        }

        if (!csvFile) {
            setFieldError(csvFileInput, "A CSV file is required.");
            isValid = false;
        }

        if (!isValid) return;

        const formData = new FormData();
        formData.append("projectTitle", projectDropdown.value);
        formData.append("projectOwner", projectOwner.value);
        formData.append("csvFile", csvFile);

        $.ajax({
            url: '/Checklist/AddProjectUpload',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                if (response.status) {
                    alert(response.message);
                    location.reload();
                } else {
                    displayError(response.message);
                }
            },
            error: function () {
                displayError("An error occurred while submitting the project.");
            }
        });
    }

    function resetFieldStyles() {
        const fields = document.querySelectorAll("#projectDropdown, #projectOwner, #csvFileInput");
        fields.forEach(field => field.style.borderColor = "");
        clearError();
    }

    function setFieldError(field, message) {
        field.style.borderColor = "#d9534f";
        displayError(message);
    }

    function displayError(message) {
        let errorContainer = document.getElementById("errorContainer");
        if (!errorContainer) {
            errorContainer = document.createElement("div");
            errorContainer.id = "errorContainer";
            errorContainer.style.color = "#d9534f";
            errorContainer.style.marginTop = "10px";
            document.body.prepend(errorContainer);
        }
        errorContainer.innerText = message;
    }

    function clearError() {
        const errorContainer = document.getElementById("errorContainer");
        if (errorContainer) errorContainer.innerText = "";
    }

    document.getElementById("projectDropdown").addEventListener("change", function () {
        const projectId = this.value;

        if (projectId) {
            $.ajax({
                url: '/Checklist/GetProjectOwner',
                type: 'GET',
                data: { projectId: projectId },
                success: function (response) {
                    if (response.success) {
                        const ownerName = `${response.owner.FullName} (${response.owner.Email})`;
                        document.getElementById("projectOwner").value = ownerName;
                    } else {
                        alert(response.message);
                    }
                },
                error: function () {
                    alert("An error occurred while fetching the project owner.");
                }
            });
        } else {
            document.getElementById("projectOwner").value = "";
        }
    });
</script>


