@model ProjectManagementSystem.Models.DashboardViewModel

@using System.Globalization;

@{
    ViewBag.Title = " Dashboard • Project Management System";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    // old
    // var calendar = CultureInfo.InvariantCulture.Calendar;
    //var currentWeek = calendar.GetWeekOfYear(DateTime.Now, CalendarWeekRule.FirstDay, DayOfWeek.Sunday);


    var calendar = CultureInfo.InvariantCulture.Calendar;
    var currentWeek = calendar.GetWeekOfYear(DateTime.Now, CalendarWeekRule.FirstDay, DayOfWeek.Sunday);

    var startOfWeek = DateTime.Today.AddDays(-(int)DateTime.Today.DayOfWeek);
    var endOfWeek = startOfWeek.AddDays(6);


    //int GetCustomWeekOfYear(DateTime date)
    //{
    //    var dayOfYear = date.DayOfYear;
    //    var startOfYear = new DateTime(date.Year, 1, 1);
    //    var startDayOfWeek = (int)startOfYear.DayOfWeek;

    //    var daysToAlign = (7 - startDayOfWeek) % 7;
    //    var adjustedDayOfYear = dayOfYear + daysToAlign;


    //    return (int)Math.Ceiling(adjustedDayOfYear / 7.0);
    //}

    var totalTasks = Model.TotalTasks > 0 ? Model.TotalTasks : 1;
    var completedPercentage = (double)Model.CompletedTasks / totalTasks * 100;
    var pendingPercentage = 100 - completedPercentage;

    var userEmail = User.Identity.Name ?? "Guest";
    var userName = userEmail.Contains("@") ? userEmail.Split('@')[0] : userEmail;
}

<style>
    body {
        font-family: 'Poppins', sans-serif;
        background-color: #f4f6f9;
        margin: 0;
        padding: 0;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes scaleUp {
        from {
            opacity: 0;
            transform: scale(0.9);
        }

        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    .header-container {
        background-color: #470A67;
        color: white;
        text-align: center;
        padding: 50px 40px;
        margin: 20px auto;
        width: 95%;
        max-width: 1200px;
        border-radius: 15px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        animation: fadeIn 1s ease-in-out;
    }

    .header-left {
        text-align: left;
        margin-left: 20px;
    }

    .header-container h3 {
        font-size: 2rem;
        margin-left: 30px;
        color: white !important;
        padding-top: 10px;
    }

    .top-card-row {
        display: flex;
        justify-content: center;
        gap: 25px;
        margin: 30px 0;
        animation: fadeIn 1.2s ease-in-out;
    }

    .top-card {
        background-color: #e7dff3;
        color: #66339A;
        border-radius: 30px;
        width: 220px;
        padding: 18px 25px;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        text-align: center;
        animation: scaleUp 1.2s ease-in-out;
        animation-delay: 0.2s;
    }

        .top-card i {
            font-size: 1.8rem;
            color: #66339A;
            margin-bottom: 10px;
        }

        .top-card h3 {
            font-size: 1.5rem;
            margin: 0;
        }

        .top-card p {
            font-size: 0.9rem;
            color: #66339A;
            margin: 0;
        }

    .content-section {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 25px;
        margin-top: 35px;
        animation: fadeIn 1.5s ease-in-out;
    }

    .card-container.wide-card-container {
        margin-top: 30px;
        overflow-x: auto;
        border-radius: 12px;
        background-color: #fff;
        padding: 30px;
        margin-left: 50px;
        margin-right: 50px;
        margin-bottom: 50px;
        box-shadow: 0 6px 16px rgba(0, 0, 0, 0.12);
        border: 1px solid #e0e0e0;
        width: 95%
    }

    .table {
        width: 98%;
        margin: auto;
        border-collapse: separate;
        border-spacing: 0;
        border-radius: 8px;
        overflow: hidden;
        background: white;
    }

        .table th, .table td {
            padding: 15px 20px;
            text-align: center;
        }

        .table th {
            background: #66399A;
            color: white;
            padding: 16px;
            font-weight: normal;
            border-bottom: 2px solid white;
        }

            .table th:first-child {
                border-top-left-radius: 8px;
                max-width: 160px;
                width: 160px;
            }

            .table th:last-child {
                border-top-right-radius: 8px;
            }

        .table tbody tr {
            transition: all 0.2s ease-in-out;
            border-bottom: 1px solid #e6e6e6;
        }

            .table tbody tr:hover {
                background: #f5f5f5;
            }

            .table tbody tr:last-child {
                border-top: none;
                border-bottom: none;
            }

        .table tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        .table tr:nth-child(odd) {
            background-color: #ffffff;
        }

    .table-hover tbody tr:hover {
        background-color: #e7dff3;
    }

    .duedate-colors {
        font-size: 14px;
    }

    .dataTables_wrapper {
        padding: 25px;
        margin-bottom: 40px;
    }

    .dataTables_paginate {
        display: flex;
        justify-content: center;
        margin-top: 20px;
        padding-bottom: 20px;
    }

        .dataTables_paginate .paginate_button {
            padding: 6px 12px;
            margin: 0 4px;
            border-radius: 8px;
            border: 1px solid #ccc;
            background-color: #fff;
            color: #66399A;
            font-weight: 500;
            transition: all 0.2s ease-in-out;
        }

            .dataTables_paginate .paginate_button:hover {
                background-color: #f3e8ff;
                border-color: #66399A;
                color: #66399A;
                box-shadow: 0 2px 5px rgba(102, 57, 154, 0.15);
            }

            .dataTables_paginate .paginate_button.current {
                background-color: #66399A;
                color: white !important;
                border-color: #66399A;
                font-weight: bold;
                box-shadow: 0 2px 6px rgba(102, 57, 154, 0.2);
            }

    .dataTables_info {
        text-align: center;
        font-size: 14px;
        color: #555;
        margin-top: 10px;
    }

    .dataTables_filter input {
        border-radius: 8px;
        border: 1px solid #ccc;
        padding: 8px 14px;
        width: 240px;
        font-size: 14px;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    }

        .dataTables_filter input:focus {
            border-color: #66399A;
            outline: none;
            box-shadow: 0 0 5px rgba(102, 57, 154, 0.3);
        }

    .dataTables_length {
        margin-left: 20px;
    }

    footer {
        margin-top: 50px;
        padding: 20px 0;
    }

    .badge {
        display: inline-block;
        padding: 5px 10px;
        border-radius: 12px;
        font-size: 12px;
        font-weight: 500;
    }

    .badge-success {
        background-color: #28a745;
        color: white;
    }

    .badge-primary {
        background-color: #007bff;
        color: white;
    }

    .badge-warning {
        background-color: #ffc107;
        color: black;
    }

    .badge-danger {
        background-color: #dc3545;
        color: white;
    }

    .badge-secondary {
        background-color: #6c757d;
        color: white;
    }

    .tooltip-container {
        position: relative;
        display: inline-block;
    }

    .status-badge {
        font-weight: 600;
        font-size: 13px;
        padding: 6px 12px;
        border-radius: 20px;
        display: inline-block;
        min-width: 100px;
        text-align: center;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        transition: all 0.2s ease-in-out;
    }

        .status-badge:hover {
            transform: scale(1.05);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

    td {
        padding: 8px 10px;
    }

    .custom-tooltip {
        visibility: hidden;
        opacity: 0;
        background-color: rgba(0, 0, 0, 0.85);
        color: white;
        text-align: left;
        border-radius: 6px;
        padding: 8px 10px;
        position: absolute;
        z-index: 999;
        bottom: 125%;
        left: 50%;
        transform: translateX(-50%);
        width: max-content;
        max-width: 200px;
        font-size: 12px;
        transition: opacity 0.3s;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
    }

    .tooltip-container:hover .custom-tooltip {
        visibility: visible;
        opacity: 1;
    }

    .legend-badge {
        display: inline-block;
        padding: 4px 10px;
        border-radius: 12px;
        font-size: 12px;
        font-weight: 500;
        margin-left: 6px;
    }

    #customSearchBox {
        border: 1px solid #ccc;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    }

        #customSearchBox:focus {
            border-color: #66399A;
            box-shadow: 0 0 5px rgba(102, 57, 154, 0.3);
        }

    .custom-tooltip span {
        font-size: 13px;
        vertical-align: middle;
    }

    .table th:first-child,
    .table td:first-child {
        position: sticky;
        left: 0;
        background-color: #fff;
        z-index: 1;
        box-shadow: 2px 0 5px rgba(0,0,0,0.05);
    }

    .table-container.wide-table-container {
        overflow-x: auto;
        padding: 30px;
        margin: 30px 50px 50px 50px;
        border-radius: 12px;
        background-color: #fff;
        box-shadow: 0 6px 16px rgba(0, 0, 0, 0.12);
        border: 1px solid #e0e0e0;
    }

    .table th:first-child {
        background: #66399A;
        color: white;
        font-weight: normal;
        padding: 16px;
        border-top-left-radius: 8px;
    }

    /*.project-title-cell {
        max-width: 160px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .project-title-cell a {
        font-size: 12px;
        display: inline-block;
        max-width: 100%;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }*/

    .table td:first-child {
        max-width: 180px; 
        min-width: 150px;
        width: 180px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        position: sticky;
        left: 0;
        background-color: #fff;
        z-index: 1;
    }

    footer {
        border-top: 1px solid #e0e0e0;
        margin-top: 50px;
        padding: 20px 0;
    }
    .project-title-cell {
        padding: 0 !important;
        position: relative;
        max-width: 260px;
        width: 260px;
    }
    .project-cell-wrapper {
        display: flex;
        align-items: center;
        padding: 10px 15px;
        gap: 10px;
        width: 100%;
        height: 100%;
        word-break: break-word;
        overflow-wrap: break-word;
    }

    .project-options {
        visibility: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 24px;
        height: 24px;
        border-radius: 4px;
        cursor: pointer;
    }


    .project-title-cell:hover .project-options {
        visibility: visible;
    }


    .ellipsis-icon {
        cursor: pointer;
        font-size: 16px;
        color: #555;
    }

    .dropdown-options {
        display: none;
        position: absolute;
        top: 50%;
        left: 25px; 
        transform: translateY(-50%);
        background: #fff;
        border: 1px solid #ccc;
        border-radius: 6px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        z-index: 1000;
        min-width: 100px;
        padding: 5px 0;
    }


    .dropdown-options a {
        display: block;
        padding: 8px 12px;
        font-size: 13px;
        color: #333;
        text-decoration: none;
    }

        .dropdown-options a:hover {
            background-color: #f5f5f5;
            color: #000;
        }
    .project-link {
        display: inline-block;
        color: #007bff;
        font-size: 14px;
        text-decoration: none;
        white-space: normal;
        line-height: 1.4;
        flex: 1;
    }
    .table th:first-child,
    .table td:first-child {
        min-width: 250px;
        max-width: 300px;
        width: 250px;
    }
    .dropdown-item:hover:not(.disabled) {
        background-color: #f5f5f5;
    }

    .dropdown-item.disabled {
        color: #aaa;
        cursor: not-allowed;
        pointer-events: none;
    }
    .dropdown-item.disabled {
        pointer-events: auto; 
        color: #aaa;
        cursor: not-allowed;
    }
    .top-card:hover {
        box-shadow: 0 4px 10px rgba(102, 57, 154, 0.2);
        transform: translateY(-3px);
        transition: 0.3s ease;
    }

</style>


<div class="header-container">
    <p>@DateTime.Now.ToString("ddd, MMMM dd, yyyy")</p>

    @{
        var hour = DateTime.Now.Hour;
        string greeting;

        if (hour <= 11)
        {
            greeting = "Good morning";
        }
        else if (hour <= 17)
        {
            greeting = "Good afternoon";
        }
        else
        {
            greeting = "Good evening";
        }

        ViewBag.Greeting = $"{greeting}, {ViewBag.FirstName}";
    }

    <h3>@ViewBag.Greeting! 👋🏼</h3>
</div>


<div class="top-card-row">
    <div class="top-card">
        <i class="fas fa-check-circle"></i>
        <p>Completed Milestones </p>
        <h3>@Model.CompletedTasks</h3>

    </div>
    <div class="top-card">
        <i class="fas fa-exclamation-circle"></i>
        <p>Pending Milestones</p>
        <h3>@Model.PendingTasks</h3>

    </div>
    <div class="top-card">
        <i class="fas fa-tasks"></i>
        <p>Total Milestones</p>
        <h3>@Model.TotalTasks</h3>

    </div>

    <div class="top-card">
        <i class="fas fa-calendar-week"></i>
        <p>Current Week</p>

        <h3>Week @currentWeek</h3>
        <p style="font-size: 12px; color: #66399A;">(@startOfWeek.ToString("MMM dd") – @endOfWeek.ToString("MMM dd"))</p>

    </div>
</div>

<div class="content-section">
    <div class="card-container wide-card-container" style="padding: 25px 30px; background: #fff; border-radius: 12px; box-shadow: 0 4px 12px rgba(0,0,0,0.05); margin-top: 20px;">

        @if (Model.ProjectsMilestones != null && Model.ProjectsMilestones.Any())
        {
            <div class="d-flex justify-content-between align-items-start flex-wrap mb-3">
                <div>
                    <h3 class="mb-3">Project Summary List</h3>

                    <div class="d-flex align-items-center" style="font-size: 14px;">
                        Show
                        <select name="entriesLength" id="entriesLength" class="form-select mx-2"
                                style="width: 80px; font-size: 14px; border-radius: 6px;">
                            <option value="5">5</option>
                            <option value="10">10</option>
                            <option value="20">20</option>
                        </select>
                        entries
                    </div>
                </div>

                <div class="d-flex flex-column align-items-end mt-2 mt-md-0">
                    <input type="text" id="customSearchBox" class="form-control mb-2"
                           placeholder="Search project name..." />

                    <div class="status-legend d-flex flex-wrap gap-2 justify-content-end mt-1">
                        <label style="font-size: 12px; font-weight: 500; color: #555; margin-top: 8px;">Legend:</label>
                        <span class="legend-badge" style="background:#D4EDDA; color:#155724;">Completed</span>
                        <span class="legend-badge" style="background:#D6E4FF; color:#004085;">Active</span>
                        <span class="legend-badge" style="background:#FFF9DB; color:#856404;">Due Today</span>
                        <span class="legend-badge" style="background:#F8D7DA; color:#b30000;">Delayed</span>
                        <span class="legend-badge" style="background:#E2E3E5; color:#383d41;">Pending</span>
                    </div>
                </div>
            </div>
            <table id="milestonesTable" class="table">
                <thead>
                    <tr>
                        <th>Projects</th>
                        @foreach (var milestoneName in Model.UniqueMilestoneNames)
                        {
                            <th>@milestoneName</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var projectGroup in Model.ProjectsMilestones.GroupBy(pm => pm.ProjectTitle))
                    {
                        <tr>

                            @*<td class="project-title-cell">
                                <div class="project-cell-wrapper">
                                    <div class="project-options">
                                        <i class="fas fa-ellipsis-h ellipsis-icon" onclick="toggleDropdown(this)"></i>
                                        <div class="dropdown-options">
                                            <a href="javascript:void(0);" onclick="archiveProject('@projectGroup.First().MainId')">Archive</a>
                                        </div>
                                    </div>

                                    <a href="javascript:void(0);"
                                       title="@projectGroup.Key"
                                       onclick="toDetailedView('@projectGroup.First().MainId', '@projectGroup.Key')"
                                       class="project-link">
                                        @projectGroup.Key
                                    </a>
                                </div>
                            </td>*@

                            @*<td class="project-title-cell" style="position: relative;">
                                @{
                                    var isCompleted = projectGroup.All(p => p.MilestoneStatus == "Completed");
                                }
                                <div class="project-cell-wrapper">
                                    <span class="project-options">
                                        <i class="fas fa-ellipsis-h ellipsis-icon" onclick="toggleDropdown(this)"></i>
                                        <div class="dropdown-options">
                                            @if (isCompleted)
                                            {
                                                <a href="javascript:void(0);"
                                                   onclick="archiveProject('@projectGroup.First().MainId')"
                                                   class="dropdown-item">
                                                    Archive
                                                </a>
                                            }
                                            else
                                            {
                                                <span class="dropdown-item disabled tooltip-container">
                                                    Archive
                                                    <span class="custom-tooltip">Project must be completed first to mark as archived</span>
                                                </span>



                                            }
                                        </div>
                                    </span>

                                    <a href="javascript:void(0);"
                                       title="@projectGroup.Key"
                                       onclick="toDetailedView('@projectGroup.First().MainId', '@projectGroup.Key')"
                                       class="project-link">
                                        @projectGroup.Key
                                    </a>
                                </div>
                            </td>*@
                            <td class="project-title-cell" style="position: relative;">
                                <div class="project-cell-wrapper">
                                    <span class="project-options">
                                        <i class="fas fa-ellipsis-h ellipsis-icon" onclick="toggleDropdown(this)"></i>
                                        <div class="dropdown-options">
                                            <a href="javascript:void(0);"
                                               onclick="archiveProject('@projectGroup.First().MainId')"
                                               class="dropdown-item">
                                                Archive
                                            </a>
                                        </div>
                                    </span>

                                    <a href="javascript:void(0);"
                                       title="@projectGroup.Key"
                                       onclick="toDetailedView('@projectGroup.First().MainId', '@projectGroup.Key')"
                                       class="project-link">
                                        @projectGroup.Key
                                    </a>
                                </div>
                            </td>


                            @foreach (var milestoneName in Model.UniqueMilestoneNames)
                            {
                                var milestoneTasks = projectGroup.Where(pm => pm.MilestoneName == milestoneName);

                                var latestEndDate = milestoneTasks.Any(pm => pm.EndDate.HasValue)
                                    ? milestoneTasks.Max(pm => pm.EndDate.Value)
                                    : (DateTime?)null;

                                var currentEndDate = milestoneTasks.Any(pm => pm.CurrentCompletionDate.HasValue)
                                    ? milestoneTasks.Max(pm => pm.CurrentCompletionDate.Value)
                                    : latestEndDate;

                                var osWeek = latestEndDate.HasValue
                                    ? $"WW{latestEndDate.Value:yy}{CultureInfo.InvariantCulture.Calendar.GetWeekOfYear(latestEndDate.Value, CalendarWeekRule.FirstDay, DayOfWeek.Sunday):00}"
                                    : "-";

                                var csWeek = currentEndDate.HasValue
                                    ? $"WW{currentEndDate.Value:yy}{CultureInfo.InvariantCulture.Calendar.GetWeekOfYear(currentEndDate.Value, CalendarWeekRule.FirstDay, DayOfWeek.Sunday):00}"
                                    : "-";

                                string combinedFormatted;

                                if (osWeek != "-" && csWeek != "-" && osWeek != csWeek)
                                {
                                    combinedFormatted = $"{osWeek} os / {csWeek} cs";
                                }
                                else if (osWeek != "-")
                                {
                                    combinedFormatted = osWeek;
                                }
                                else
                                {
                                    combinedFormatted = "-";
                                }

                                var milestoneStatus = milestoneTasks.FirstOrDefault()?.MilestoneStatus ?? "";

                                string cellColor = "";
                                string textColor = "";

                                switch (milestoneStatus)
                                {
                                    case "Completed":
                                        cellColor = "#E6F4EA";
                                        textColor = "#4C8C6B";
                                        break;

                                    case "Active":
                                        cellColor = "#E8F0FE";
                                        textColor = "#4A6ED8";
                                        break;

                                    case "Due Today":
                                        cellColor = "#FFFAE6";
                                        textColor = "#B99E4C";
                                        break;

                                    case "Delayed":
                                        cellColor = "#FCE9EC";
                                        textColor = "#D25567";
                                        break;

                                    case "Pending":
                                        cellColor = "#F0F0F0";
                                        textColor = "#7A7A7A";
                                        break;

                                    default:
                                        cellColor = "#ffffff";
                                        textColor = "#000000";
                                        break;
                                }



                                <td style="text-align: center; position: relative;">
                                    <div class="tooltip-container">
                                        <span class="status-badge"
                                              style="background-color:@cellColor; color:@textColor;">
                                            @combinedFormatted
                                        </span>
                                        <div class="custom-tooltip">
                                            <strong>Status:</strong> @milestoneStatus
                                            @if (milestoneStatus == "Completed")
                                            { <span style="margin-left:4px;">✅</span> }
                                            else if (milestoneStatus == "Active")
                                            { <span style="margin-left:4px;">🟢</span> }
                                            else if (milestoneStatus == "Due Today")
                                            { <span style="margin-left:4px;">⏳</span> }
                                            else if (milestoneStatus == "Delayed")
                                            { <span style="margin-left:4px;">⚠️</span> }
                                            else if (milestoneStatus == "Pending")
                                            { <span style="margin-left:4px;">🕒</span> }
                                            <br />
                                            <strong>Due:</strong> @(currentEndDate?.ToString("MMM dd, yyyy") ?? "N/A")
                                        </div>
                                    </div>
                                </td>



                            }
                        </tr>
                    }
                </tbody>
                
            </table>
        }
        else
        {
            <div style="text-align: center; padding: 20px;">
                <h5>Your dashboard is looking a little empty - start your project now!</h5>
                <br />
                <a href="@Url.Action("AddProject", "Checklist")" class="invite-button">Let's get started</a>
            </div>
        }
    </div>


    @*<div class="sidebar-cards">
            <!-- Upcoming Tasks Card -->
            <div class="sidebar-card">
                <h5 class="card-title">Upcoming Tasks</h5>
                <ul class="upcoming-tasks-list">
                    @if (Model.UpcomingDeliverables != null && Model.UpcomingDeliverables.Any())
                    {
                        foreach (var deliverable in Model.UpcomingDeliverables)
                        {
                            <li>
                                <strong>@deliverable.Tasks</strong>
                                <p>Due on @deliverable.DueDate.ToString("MMMM dd, yyyy")</p>
                            </li>
                        }
                    }
                    else
                    {
                        <li>No upcoming tasks.</li>
                    }
                </ul>
            </div>

            <!-- Overall Progress Card -->
            <div class="sidebar-card">
                <h5 class="card-title">Overall Progress</h5>
                <div class="chart-container">
                    <canvas id="progressChart"></canvas>
                </div>
                <p class="text-center">Completed: @completedPercentage.ToString("F2")% | Pending: @pendingPercentage.ToString("F2")%</p>
            </div>
        </div>*@
</div>

@section scripts {

    <style>
        button.dt-paging-button {
            all: unset !important;
            font-family: 'Poppins', sans-serif !important;
            display: inline-block !important;
            padding: 6px 10px !important;
            margin: 0 3px !important;
            border-radius: 6px !important;
            border: 1px solid #ccc !important;
            background-color: #fff !important;
            color: #333 !important;
            font-weight: 500 !important;
            font-size: 13px !important;
            cursor: pointer !important;
            transition: all 0.2s ease-in-out !important;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.08) !important;
        }

            button.dt-paging-button:hover:not(:disabled) {
                background-color: #f0f0f0 !important;
                border-color: #999 !important;
                color: #333 !important;
                box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1) !important;
            }

            button.dt-paging-button.current {
                background-color: #e0e0e0 !important;
                color: #333 !important;
                font-weight: bold !important;
                border-color: #bfbfbf !important;
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1) !important;
            }

            button.dt-paging-button:disabled {
                background-color: #f5f5f5 !important;
                color: #aaa !important;
                cursor: not-allowed !important;
                border: 1px solid #ddd !important;
                box-shadow: none !important;
            }

        button.dt-paging-button:disabled {
            background-color: #f5f5f5 !important;
            color: #ccc !important;
            cursor: default !important;
            box-shadow: none !important;
            border: 1px solid #eee !important;
        }

        .ellipsis-icon {
            cursor: pointer;
            font-size: 18px;
            color: #666;
            display: inline-block;
            transform: rotate(0deg); 
            line-height: 1;
        }

        .ellipsis-icon:hover {
            color: #000;
        }

        .dropdown-options {
            display: none;
            position: absolute;
            right: 0;
            top: 20px;
            background: white;
            border: 1px solid #ccc;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
            min-width: 100px;
            z-index: 10;
            left: 35px;
        }

    .dropdown-options a {
        display: block;
        padding: 8px 12px;
        color: #333;
        text-decoration: none;
        font-size: 13px;
    }

    .dropdown-options a:hover {
        background-color: #f5f5f5;
        color: #000;
    }

    </style>

<script>
    $(document).ready(function () {
       
        var table = $('#milestonesTable').DataTable({
            responsive: true,
            pagingType: 'full_numbers',
            pageLength: 5,
            lengthMenu: [[5, 10, 20], [5, 10, 20]],
            language: {
                paginate: {
                    first: '<<',
                    last: '>>',
                    next: '>',
                    previous: '<'
                },
                info: "Showing _START_ to _END_ of _TOTAL_ entries"
            },
            dom: 't<"custom-footer d-flex flex-column align-items-center gap-2"ip><"clear">'
        });

        
        $('#customSearchBox').on('keyup', function () {
            table.search(this.value).draw();
        });

        
        $('#entriesLength').on('change', function () {
            var length = parseInt($(this).val(), 10);
            table.page.len(length).draw();
        });

        
        $('#milestonesTable tbody').on('mouseenter', 'tr', function () {
            $(this).css('background-color', '#f5f5f5');
        }).on('mouseleave', 'tr', function () {
            $(this).css('background-color', '');
        });      
    });

    function toDetailedView(mainId, projectTitle) {
        //window.location.href = `/Checklist/weeklyMilestone?id=${mainId}&title=${projectTitle}`;
        //window.location.href = `/Checklist/weeklyMilestone?id=${mainId}&title=${projectTitle}&tab=timeline`;
        window.location.href = `weeklyMilestone?id=${mainId}&title=${projectTitle}&tab=timeline`;
    }

    function toggleDropdown(icon) {
        $('.project-options').not($(icon).parent()).removeClass('show');
        $(icon).parent().toggleClass('show');
    }

    $(document).on('click', function (e) {
        if (!$(e.target).closest('.project-options').length) {
            $('.dropdown-options').hide();
            $('.project-options').removeClass('show');
        }
    });

    $(document).on('click', '.ellipsis-icon', function (e) {
        e.stopPropagation();
        var $dropdown = $(this).siblings('.dropdown-options');
        $('.dropdown-options').not($dropdown).hide();
        $dropdown.toggle();
    });

    function archiveProject(mainId) {
        if (confirm("Are you sure you want to archive this project?")) {
            window.location.href = `/Checklist/ArchiveProject?id=${mainId}`;
        }
    }
</script>

}