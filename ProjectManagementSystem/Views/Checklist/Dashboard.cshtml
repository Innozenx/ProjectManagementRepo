@model ProjectManagementSystem.Models.DashboardViewModel

@using System.Globalization;

@{
    ViewBag.Title = " Dashboard • Project Management System";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    // old 
    // var calendar = CultureInfo.InvariantCulture.Calendar;
    //var currentWeek = calendar.GetWeekOfYear(DateTime.Now, CalendarWeekRule.FirstDay, DayOfWeek.Sunday);


    var calendar = CultureInfo.InvariantCulture.Calendar;
    var currentWeek = calendar.GetWeekOfYear(DateTime.Now, CalendarWeekRule.FirstDay, DayOfWeek.Sunday);


    //int GetCustomWeekOfYear(DateTime date)
    //{
    //    var dayOfYear = date.DayOfYear;
    //    var startOfYear = new DateTime(date.Year, 1, 1);
    //    var startDayOfWeek = (int)startOfYear.DayOfWeek;

    //    var daysToAlign = (7 - startDayOfWeek) % 7;
    //    var adjustedDayOfYear = dayOfYear + daysToAlign;


    //    return (int)Math.Ceiling(adjustedDayOfYear / 7.0);
    //}

    var totalTasks = Model.TotalTasks > 0 ? Model.TotalTasks : 1;
    var completedPercentage = (double)Model.CompletedTasks / totalTasks * 100;
    var pendingPercentage = 100 - completedPercentage;

    var userEmail = User.Identity.Name ?? "Guest";
    var userName = userEmail.Contains("@") ? userEmail.Split('@')[0] : userEmail;
}

<style>
    body {
        font-family: 'Poppins', sans-serif;
        background-color: #f4f6f9;
        margin: 0;
        padding: 0;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes scaleUp {
        from {
            opacity: 0;
            transform: scale(0.9);
        }

        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    .header-container {
        background-color: #470A67;
        color: white;
        text-align: center;
        padding: 50px 40px; 
        margin: 20px auto; 
        width: 95%; 
        max-width: 1200px; 
        border-radius: 15px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        animation: fadeIn 1s ease-in-out;
    }


    .header-left {
        text-align: left;
        margin-left: 20px;
    }

    .header-container h3 {
        font-size: 2rem;
        margin-left: 30px;
        color: white !important;
        padding-top: 10px;
    }

    .top-card-row {
        display: flex;
        justify-content: center;
        gap: 25px;
        margin: 30px 0;
        animation: fadeIn 1.2s ease-in-out;
    }

    .top-card {
        background-color: #e7dff3;
        color: #66339A;
        border-radius: 30px;
        width: 220px;
        padding: 18px 25px;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        text-align: center;
        animation: scaleUp 1.2s ease-in-out;
        animation-delay: 0.2s;
    }

        .top-card i {
            font-size: 1.8rem;
            color: #66339A;
            margin-bottom: 10px;
        }

        .top-card h3 {
            font-size: 1.5rem;
            /*/*font-weight: bold;*/*/
            margin: 0;
        }

        .top-card p {
            font-size: 0.9rem;
            color: #66339A;
            margin: 0;
        }

    .content-section {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 25px;
        margin-top: 35px;
        animation: fadeIn 1.5s ease-in-out;
    }

    .table-container.wide-table-container {
        margin-top: 30px;
        overflow-x: auto;
        border-radius: 10px;
        background-color: #fff;
        padding: 30px;
        margin-left: 30px;
        margin-right: 30px;
        margin-bottom: 50px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        animation: fadeIn 1.8s ease-in-out;
    }

    .table {
        width: 98%;
        margin: auto;
        border-collapse: collapse;
        border-radius: 8px;
        overflow: hidden;
        background: white;
    }

        .table th,
        .table td {
            padding: 15px 20px;
            text-align: center;
        }

        .table th {
            background: #66399A;
            color: white;
            padding: 16px;
            font-weight: normal;
            text-align: center;
            border-radius: 0px;
            border-bottom: 2px solid white;
        }

            .table th:first-child {
                border-top-left-radius: 8px;
            }

            .table th:last-child {
                border-top-right-radius: 8px;
            }

        .table tbody tr {
            transition: all 0.2s ease-in-out;
        }

            .table tbody tr:hover {
                background: #f5f5f5;
            }

    .table {
        border-collapse: separate;
        border-spacing: 0;
        width: 100%;
        border-radius: 8px;
        overflow: hidden;
    }

        .table tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        .table tr:nth-child(odd) {
            background-color: #ffffff;
        }

    .table-hover tbody tr:hover {
        background-color: #e7dff3;
    }

    .duedate-colors {
        font-size: 14px;
    }

    .dataTables_wrapper {
        padding: 25px;
        margin-bottom: 40px;
    }

    .dataTables_paginate {
        margin-top: 10px;
        padding-bottom: 30px;
    }

    .dataTables_filter input {
        border-radius: 20px;
        border: 1px solid #6A0DAD;
        padding: 12px 18px;
        width: 270px;
        box-shadow: 0px 3px 8px rgba(0, 0, 0, 0.1);
    }

    .dataTables_length {
        margin-left: 20px;
    }

    footer {
        margin-top: 50px;
        padding: 20px 0;
    }
</style>


<div class="header-container">
@*<div class="header-left">
    <a href="@Url.Action("Dashboard","Checklist")" class="home-link">Dashboard</a></div>*@
    <p>@DateTime.Now.ToString("ddd, MMMM dd, yyyy")</p>
    <h3>Hello, @userName! 👋🏼</h3>

    @*@if (Model.PendingTasks > 0)
    {
        <p style="font-size: 1.1rem; color: white; animation: fadeIn 1.5s ease-in-out;">
            Let’s make progress today—your tasks are waiting for you! 
        </p>
    }
    else
    {
        <p style="font-size: 1.1rem; color:white; animation: fadeIn 1.5s ease-in-out;">
            No tasks yet? Let's start your project journey today! 
        </p>
    }*@
</div>

<div class="top-card-row">
    <div class="top-card">
        <i class="fas fa-check-circle"></i>
        <p>Completed Milestones </p>
        <h3>@Model.CompletedTasks</h3>
        
    </div>
    <div class="top-card">
        <i class="fas fa-exclamation-circle"></i>
        <p>Pending Milestones</p>
        <h3>@Model.PendingTasks</h3>
        
    </div>
    <div class="top-card">
        <i class="fas fa-tasks"></i>
        <p>Total Milestones</p>
        <h3>@Model.TotalTasks</h3>
        
    </div>
    <div class="top-card">
        <i class="fas fa-calendar-week"></i>
        <p>Current Week</p>

        <h3>Week @currentWeek</h3>
        
    </div>
</div>

<div class="content-section">
    <div class="card-container wide-card-container">
        @if (Model.ProjectsMilestones != null && Model.ProjectsMilestones.Any())
        {
            <div class="table-container wide-table-container">
                <h3>Project Summary List</h3> @*change to dept*@
                @*<h5>Total Number of Projects: </h5>*@ @*add computation on this so we can get total proj per dept.*@

                <table id="milestonesTable" class="table">
                    <thead>
                        <tr>
                            <th>Projects</th>
                            @foreach (var milestoneName in Model.UniqueMilestoneNames)
                            {
                                <th>@milestoneName</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var projectGroup in Model.ProjectsMilestones.GroupBy(pm => pm.ProjectTitle))
                        {
                            <tr>
                                <td>
                                    <a href="javascript:void(0);" style="font-size:14px;" onclick="toDetailedView('@projectGroup.First().MainId', '@projectGroup.Key')">
                                        @projectGroup.Key
                                    </a>
                                </td>
                                @foreach (var milestoneName in Model.UniqueMilestoneNames)
                                {
                                    var milestoneTasks = projectGroup.Where(pm => pm.MilestoneName == milestoneName);

                                    // OS
                                    var latestEndDate = milestoneTasks.Any(pm => pm.EndDate.HasValue)
                                        ? milestoneTasks.Max(pm => pm.EndDate.Value)
                                        : (DateTime?)null;
                                    var osFormatted = latestEndDate.HasValue
                                        ? $"WW{latestEndDate.Value:yy}{CultureInfo.InvariantCulture.Calendar.GetWeekOfYear(latestEndDate.Value, CalendarWeekRule.FirstDay, DayOfWeek.Sunday):00} os"
                                        : "-";

                                    // CS
                                    var currentEndDate = milestoneTasks.Any(pm => pm.CurrentCompletionDate.HasValue)
                                        ? milestoneTasks.Max(pm => pm.CurrentCompletionDate.Value)
                                        : latestEndDate;
                                    var csFormatted = currentEndDate.HasValue
                                        ? $"WW{currentEndDate.Value:yy}{CultureInfo.InvariantCulture.Calendar.GetWeekOfYear(currentEndDate.Value, CalendarWeekRule.FirstDay, DayOfWeek.Sunday):00} cs"
                                        : "-";

                                    // kunyari foresee na nilang madedelay project, hindi muna sya mag display sa dashboard

                                    // OS / CS Combined
                                    var combinedFormatted = osFormatted != csFormatted && csFormatted != "-"
                                        ? $"{osFormatted} / {csFormatted}"
                                        : osFormatted;

                                    <td class="duedate-colors">@combinedFormatted</td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div style="text-align: center; padding: 20px;">
                <h5>Your dashboard is looking a little empty - start your project now!</h5>
                <br />
                <a href="@Url.Action("AddProject", "Checklist")" class="invite-button">Let's get started</a>
            </div>
        }
    </div>

    @*<div class="sidebar-cards">
        <!-- Upcoming Tasks Card -->
        <div class="sidebar-card">
            <h5 class="card-title">Upcoming Tasks</h5>
            <ul class="upcoming-tasks-list">
                @if (Model.UpcomingDeliverables != null && Model.UpcomingDeliverables.Any())
                {
                    foreach (var deliverable in Model.UpcomingDeliverables)
                    {
                        <li>
                            <strong>@deliverable.Tasks</strong>
                            <p>Due on @deliverable.DueDate.ToString("MMMM dd, yyyy")</p>
                        </li>
                    }
                }
                else
                {
                    <li>No upcoming tasks.</li>
                }
            </ul>
        </div>

        <!-- Overall Progress Card -->
        <div class="sidebar-card">
            <h5 class="card-title">Overall Progress</h5>
            <div class="chart-container">
                <canvas id="progressChart"></canvas>
            </div>
            <p class="text-center">Completed: @completedPercentage.ToString("F2")% | Pending: @pendingPercentage.ToString("F2")%</p>
        </div>
    </div>*@
</div>

@section scripts {
<script>
    $(document).ready(function () {
        $('#milestonesTable').DataTable({
            responsive: true,
            pagingType: 'full_numbers',
            pageLength: 3, 
            lengthMenu: [[3, 5, 10, 15, 20], [5, 10, 25, 50, 100]],
            language: {
                search: "_INPUT_",
                searchPlaceholder: "Search project name...",
                paginate: {
                    first: '<<',
                    last: '>>',
                    next: '>',
                    previous: '<'
                },
                lengthMenu: "Show _MENU_ entries",
                info: "Showing _START_ to _END_ of _TOTAL_ entries"
            },
            dom: '<"top d-flex justify-content-between align-items-center"lfr>t<"bottom d-flex justify-content-between align-items-center"ip><"clear">',
            initComplete: function () {
                $('.dataTables_filter input').addClass('form-control').css({
                    'font-size': '14px',
                    'width': '320px', 
                    'margin-left': '15px',
                    'margin-right': '15px',
                    'border-radius': '8px',
                    'padding': '8px 12px'
                });

                $('.dataTables_length select').addClass('form-select').css({
                    'font-size': '14px',
                    'width': 'auto',
                    'margin-left': '10px',
                    'margin-right': '10px',
                    'padding': '6px 12px',
                    'border-radius': '6px' 
                });

               
                $('.dataTables_paginate').css({
                    'margin-top': '15px',
                    'padding-bottom': '10px'
                });

                $('.dataTables_info').css({
                    'margin-top': '15px',
                    'font-size': '14px',
                    'color': '#666'
                });

                $('#milestonesTable').css({
                    'border-collapse': 'separate',
                    'border-spacing': '0 12px' 
                });

                $('#milestonesTable tbody tr').hover(function () {
                    $(this).css('background-color', '#f5f5f5');
                }, function () {
                    $(this).css('background-color', '');
                });
            }
        });
    });

    function toDetailedView(mainId, projectTitle) {
        window.location.href = `/Checklist/weeklyMilestone?id=${mainId}&title=${projectTitle}`;
    }
</script>

}