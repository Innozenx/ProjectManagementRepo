@model ProjectManagementSystem.Models.DashboardViewModel
@using System.Globalization;

@{
    ViewBag.Title = " Dashboard - Project Management System";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    var calendar = CultureInfo.InvariantCulture.Calendar;
    var currentWeek = calendar.GetWeekOfYear(DateTime.Now, CalendarWeekRule.FirstFourDayWeek, DayOfWeek.Sunday);

    var totalTasks = Model.TotalTasks > 0 ? Model.TotalTasks : 1;
    var completedPercentage = (double)Model.CompletedTasks / totalTasks * 100;
    var pendingPercentage = 100 - completedPercentage;

    var userEmail = User.Identity.Name ?? "Guest";
    var userName = userEmail.Contains("@") ? userEmail.Split('@')[0] : userEmail;
}
<style>
    body {
        font-family: 'Poppins', sans-serif;
        background-color: #f4f6f9;
        margin: 0;
        padding: 0;
    }

    .header-container {
        background-color: #470A67;
        color: white;
        text-align: center;
        padding: 30px 0;
        margin-bottom: 20px;
    }

    .header-container h3 {
        font-size: 2rem;
        /*font-weight: bold;*/
        margin-left: 30px;
    }

    .header-container p {
        font-size: 1.1rem;
    }

    .top-card-row {
        display: flex;
        justify-content: center;
        gap: 20px;
        margin: 20px 0;
    }

    .top-card {
        background-color: #e7dff3;
        color: #66339A;
        border-radius: 30px;
        width: 200px;
        padding: 15px 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        text-align: center;
    }

    .top-card i {
        font-size: 1.8rem;
        color: #66339A;
        margin-bottom: 10px;
    }

    .top-card h3 {
        font-size: 1.5rem;
        font-weight: bold;
        margin: 0;
    }

    .top-card p {
        font-size: 0.9rem;
        color: #66339A;
        margin: 0;
    }

    .content-section {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 20px;
        margin-top: 30px;
    }

    .card-container {
        background-color: #ffffff;
        /*background-color: antiquewhite;*/
        border-radius: 20px;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        padding: 10px 20px;
        margin-bottom: 20px;
        width: 95%;
        max-width: 1000px;
    }

    .card-title {
        font-size: 1.25rem;
        font-weight: bold;
        color: #66339A;
        margin-bottom: 15px;
        text-align: center;
        margin-top: 10px;

    }

    .table-container {
        overflow-x: auto;
    }

    .table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 10px;
    }

    .table th, .table td {
        padding: 8px;
        text-align: center;
        border-bottom: 1px solid #ddd;
    }

    .table th {
        background-color: #470A67;
        color: #fff;
    }

    .sidebar-cards {
        display: flex;
        justify-content: space-between;
        gap: 20px;
        width: 95%;
        max-width: 1000px;
        margin-bottom: 20px;

    }

    .sidebar-card {
        background-color: #ffffff;
        border-radius: 20px;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        padding: 20px;
        width: 48%;
        /*text-align: center;*/
    }

    /*.invite-button {
        background-color: #66339A;
        color: white;
        padding: 8px 16px;
        border-radius: 20px;
        text-align: center;
        cursor: pointer;
        display: inline-block;
        margin-top: 10px;
    }*/

    .invite-button:hover {
        background-color: #532c7e;
    }

    .chart-container {
        width: 100%;
        max-width: 200px;
        margin: 0 auto;
    }
    .header-left {
        position: absolute;
        margin-left: 30px;
    }

    .home-link {
        font-size: 1.1rem;
        /*font-weight: bold;*/
        color: white;
        text-decoration: none;
    }

    .home-link:hover {
        color: #e0e0e0;
    }

    .header-center {
        text-align: center;
    }

    .header-center h3 {
        font-size: 2rem;
        font-weight: bold;
        margin: 0;
    }

    .header-center p {
        font-size: 1.1rem;
        margin: 0;
    }

    .invite-button {
        background-color: #66339A;
        color: white;
        padding: 10px 20px;
        border-radius: 25px;
        font-size: 1rem;
        font-weight: bold;
        text-align: center;
        cursor: pointer;
        text-decoration: none;
        display: inline-block;
        transition: background-color 0.3s ease, box-shadow 0.3s ease;
    }

    .invite-button:hover {
        background-color: #66339A;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .invite-button:active {
        background-color: #66339A;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    @@media (max-width: 768px) {
        .header-container {
            padding: 20px 10px;
        }

            .header-container h3 {
                font-size: 1.5rem;
            }

            .header-container p {
                font-size: 1rem;
            }

        .top-card-row {
            flex-wrap: wrap;
            gap: 10px;
            justify-content: center;
        }

        .top-card {
            width: 45%;
            padding: 10px 15px;
            font-size: 0.9rem;
        }

            .top-card h3 {
                font-size: 1.2rem;
            }

        .content-section {
            margin-top: 20px;
        }

        .card-container {
            padding: 15px;
            width: 95%;
        }

        .card-title {
            font-size: 1rem;
            margin-bottom: 10px;
        }

        .table th, .table td {
            font-size: 0.9rem;
            padding: 6px;
        }

        .sidebar-cards {
            flex-direction: column;
            gap: 15px;
            width: 100%;
        }

        .sidebar-card {
            width: 100%;
            padding: 15px;
        }

        .invite-button {
            width: 100%;
            font-size: 0.9rem;
            padding: 8px;
        }

        .chart-container {
            max-width: 150px;
        
        }

        .home-link {
            font-size: 1rem;
        }
    }
    .project-roles {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
        align-items: center;
        margin-top: 20px;
    }

    .add-member {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        width: 100px;
        height: 100px;
        border: 2px dashed #ccc;
        border-radius: 50%;
        color: #66339A;
        font-weight: bold;
        cursor: pointer;
        transition: background-color 0.3s, color 0.3s;
        text-align: center;
    }

        .add-member:hover {
            background-color: #f4f6f9;
            color: #470A67;
        }

    .add-member-icon {
        font-size: 2rem;
    }

    .member-card {
        display: flex;
        align-items: center;
        gap: 10px;
        background-color: #ffffff;
        border: 1px solid #ddd;
        border-radius: 10px;
        padding: 10px 15px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .avatar-circle {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-color: #470A67;
        color: #fff;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
        font-weight: bold;
    }

    .member-info {
        display: flex;
        flex-direction: column;
    }

    .member-info strong {
        font-size: 0.9rem;
        color: #333;
    }

    .member-info p {
        font-size: 0.8rem;
        color: #666;
        margin: 0;
    }

    .dataTables-wrapper-custom {
        display: flex;
        justify-content: flex-end;
        align-items: center;
        gap: 20px;
        margin-bottom: 20px;
    }

    .dataTables_length {
        display: inline-flex;
        align-items: center;
    }

        .dataTables_length select {
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 5px;
            font-size: 14px;
            outline: none;
            font-family: 'Poppins', sans-serif;
        }

    .dataTables_filter {
        display: inline-flex;
        align-items: center;
    }

        .dataTables_filter input {
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 5px 10px;
            font-size: 14px;
            width: 300px;
            outline: none;
            transition: border-color 0.3s ease;
        }

            .dataTables_filter input:focus {
                border-color: #470A67;
                box-shadow: 0 0 5px rgba(71, 10, 103, 0.5);
            }

    .dataTables_paginate {
        margin-top: 10px;
        text-align: center;
    }

    .dataTables_paginate .paginate_button {
        display: inline-block;
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 5px 15px;
        margin: 0 2px;
        font-size: 14px;
        color: #66339A;
        background-color: #fff;
        cursor: pointer;
        transition: background-color 0.3s, color 0.3s;
    }

    .dataTables_paginate .paginate_button:hover {
        background-color: #66339A;
        color: #fff;
    }

    .dataTables_paginate .paginate_button.current {
        background-color: #66339A;
        color: #fff;
        font-weight: bold;
    }

    .dataTables_paginate .paginate_button.disabled {
        color: #ccc;
        cursor: not-allowed;
    }
    .dataTables_length select {
        border: 1px solid #ddd;
        border-radius: 20px;
        padding: 5px;
        font-size: 14px;
        outline: none;
        font-family: 'Poppins', sans-serif;
    }

</style>

<!-- Header Section -->
<div class="header-container">
<div class="header-left">
    <a href="@Url.Action("Dashboard","Checklist")" class="home-link">Dashboard</a></div>
    <br />
    <br />
    <p>@DateTime.Now.ToString("ddd, MMMM dd, yyyy")</p>
    <h3>Hello, @userName!</h3>
</div>

<!-- Top Cards Row -->
<div class="top-card-row">
    <div class="top-card">
        <i class="fas fa-check-circle"></i>
        <p>Completed Tasks</p>
        <h3>@Model.CompletedTasks</h3>
        
    </div>
    <div class="top-card">
        <i class="fas fa-exclamation-circle"></i>
        <p>Pending Tasks</p>
        <h3>@Model.PendingTasks</h3>
        
    </div>
    <div class="top-card">
        <i class="fas fa-tasks"></i>
        <p>Total Tasks</p>
        <h3>@Model.TotalTasks</h3>
        
    </div>
    <div class="top-card">
        <i class="fas fa-calendar-week"></i>
        <p>Current Week</p>
        <h3>Week @currentWeek</h3>
        
    </div>
</div>

<!-- Content Section -->
<div class="content-section">
    <div class="card-container">
        @if (Model.ProjectsMilestones != null && Model.ProjectsMilestones.Any())
        {
            <div class="table-container">
                <h5 class="card-title">Project Summary</h5>
                <table id="milestonesTable" class="table">
                    <thead>
                        <tr>

                            <th>Project Name</th>
                            @foreach (var milestoneName in Model.UniqueMilestoneNames)
                            {
                                <th>@milestoneName</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var projectGroup in Model.ProjectsMilestones.GroupBy(pm => pm.ProjectTitle))
                        {
                            <tr>
                                <td>
                                    <a href="javascript:void(0);" onclick="toDetailedView('@projectGroup.First().MainId', '@projectGroup.Key')">
                                        @projectGroup.Key
                                    </a>
                                </td>
                                @foreach (var milestoneName in Model.UniqueMilestoneNames)
                                {
                                    var milestoneTasks = projectGroup.Where(pm => pm.MilestoneName == milestoneName && pm.EndDate.HasValue);
                                    var latestEndDate = milestoneTasks.Any() ? milestoneTasks.Max(pm => pm.EndDate.Value) : (DateTime?)null;
                                    var endDateFormatted = latestEndDate.HasValue ? $"WW{latestEndDate.Value:yy}{CultureInfo.InvariantCulture.Calendar.GetWeekOfYear(latestEndDate.Value, CalendarWeekRule.FirstFourDayWeek, DayOfWeek.Sunday):00}" : "N/A";
                                    <td>@endDateFormatted</td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div style="text-align: center; padding: 20px;">
                <h5>Your dashboard is looking a little empty - start your project now!</h5>
                <br />
                <a href="@Url.Action("AddProject", "Checklist")" class="invite-button">Let's get started</a>
            </div>
        }
    </div>

    <div class="sidebar-cards">
        <!-- Upcoming Tasks Card -->
        <div class="sidebar-card">
            <h5 class="card-title">Upcoming Tasks</h5>
            <ul class="upcoming-tasks-list">
                @if (Model.UpcomingDeliverables != null && Model.UpcomingDeliverables.Any())
                {
                    foreach (var deliverable in Model.UpcomingDeliverables)
                    {
                        <li>
                            <strong>@deliverable.Tasks</strong>
                            <p>Due on @deliverable.DueDate.ToString("MMMM dd, yyyy")</p>
                        </li>
                    }
                }
                else
                {
                    <li>No upcoming tasks.</li>
                }
            </ul>

        </div>

        <!-- Overall Progress Card -->
        <div class="sidebar-card">
            <h5 class="card-title">Overall Progress</h5>
            <div class="chart-container">
                <canvas id="progressChart"></canvas>
            </div>
            <p class="text-center">Completed: @completedPercentage.ToString("F2")% | Pending: @pendingPercentage.ToString("F2")%</p>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            $('#milestonesTable').DataTable({
                responsive: true,
                pagingType: 'full_numbers',
                language: {
                    search: "_INPUT_",
                    searchPlaceholder: "Search project name...",
                    paginate: {
                        first: '<<',
                        last: '>>',
                        next: '>',
                        previous: '<'
                    },
                    lengthMenu: "Show _MENU_ entries",
                    info: "Showing _START_ to _END_ of _TOTAL_ entries"
                },
                dom: '<"top"lfr>t<"bottom"ip><"clear">', // 'l' = entries dropdown, 'f' = search box, 'r' = processing
                initComplete: function () {
                    $('.dataTables_filter input').addClass('form-control').css('font-size', '14px');
                }
            });

            var ctx = document.getElementById('progressChart').getContext('2d');
            new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: ['Completed Tasks', 'Pending Tasks'],
                    datasets: [{
                        data: [@Model.CompletedTasks, @Model.PendingTasks],
                        backgroundColor: ['#4CAF50', '#FFC107'],
                    }]
                },
                options: {
                    responsive: true,
                    cutout: '70%',
                }
            });
        });

        function toDetailedView(mainId, projectTitle) {
            window.location.href = `/Checklist/weeklyMilestone?id=${mainId}&title=${projectTitle}`;
        }
    </script>
}

